#
# DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
#
from .libcefdef import *
from .cef_base_ref_counted_t import *
from .cef_base_scoped_t import *
from .cef_string_list import *
from .cef_string_map import *
from .cef_string_multimap import *
from .cef_string_t import *
from .cef_string_userfree import *

from .libcefinternal import *


class cef_accessibility_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_accessibility_tree_change = self._callbacks[0](self.py_on_accessibility_tree_change)
        self.on_accessibility_location_change = self._callbacks[1](self.py_on_accessibility_location_change)

    def py_on_accessibility_tree_change(self, xself, value):
        return 0
    def py_on_accessibility_location_change(self, xself, value):
        return 0


class cef_app_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_before_command_line_processing = self._callbacks[0](self.py_on_before_command_line_processing)
        self.on_register_custom_schemes = self._callbacks[1](self.py_on_register_custom_schemes)
        self.get_resource_bundle_handler = self._callbacks[2](self.py_get_resource_bundle_handler)
        self.get_browser_process_handler = self._callbacks[3](self.py_get_browser_process_handler)
        self.get_render_process_handler = self._callbacks[4](self.py_get_render_process_handler)

    def py_on_before_command_line_processing(self, xself, process_type, command_line):
        return 0
    def py_on_register_custom_schemes(self, xself, registrar):
        return 0
    def py_get_resource_bundle_handler(self, xself):
        return None
    def py_get_browser_process_handler(self, xself):
        return None
    def py_get_render_process_handler(self, xself):
        return None


class cef_audio_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.get_audio_parameters = self._callbacks[0](self.py_get_audio_parameters)
        self.on_audio_stream_started = self._callbacks[1](self.py_on_audio_stream_started)
        self.on_audio_stream_packet = self._callbacks[2](self.py_on_audio_stream_packet)
        self.on_audio_stream_stopped = self._callbacks[3](self.py_on_audio_stream_stopped)
        self.on_audio_stream_error = self._callbacks[4](self.py_on_audio_stream_error)

    def py_get_audio_parameters(self, xself, browser, params):
        return 0
    def py_on_audio_stream_started(self, xself, browser, params, channels):
        return 0
    def py_on_audio_stream_packet(self, xself, browser, data, frames, pts):
        return 0
    def py_on_audio_stream_stopped(self, xself, browser):
        return 0
    def py_on_audio_stream_error(self, xself, browser, message):
        return 0


class cef_auth_callback_t(Structure):
    _align_ = CEFALIGN


class cef_before_download_callback_t(Structure):
    _align_ = CEFALIGN


class cef_binary_value_t(Structure):
    _align_ = CEFALIGN


class cef_box_layout_t(Structure):
    _align_ = CEFALIGN


class cef_browser_host_t(Structure):
    _align_ = CEFALIGN


class cef_browser_process_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_register_custom_preferences = self._callbacks[0](self.py_on_register_custom_preferences)
        self.on_context_initialized = self._callbacks[1](self.py_on_context_initialized)
        self.on_before_child_process_launch = self._callbacks[2](self.py_on_before_child_process_launch)
        self.on_schedule_message_pump_work = self._callbacks[3](self.py_on_schedule_message_pump_work)
        self.get_default_client = self._callbacks[4](self.py_get_default_client)

    def py_on_register_custom_preferences(self, xself, type, registrar):
        return 0
    def py_on_context_initialized(self, xself):
        return 0
    def py_on_before_child_process_launch(self, xself, command_line):
        return 0
    def py_on_schedule_message_pump_work(self, xself, delay_ms):
        return 0
    def py_get_default_client(self, xself):
        return None


class cef_browser_t(Structure):
    _align_ = CEFALIGN


class cef_browser_view_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_browser_view_t(Structure):
    _align_ = CEFALIGN


class cef_button_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_button_t(Structure):
    _align_ = CEFALIGN


class cef_callback_t(Structure):
    _align_ = CEFALIGN


class cef_client_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.get_audio_handler = self._callbacks[0](self.py_get_audio_handler)
        self.get_command_handler = self._callbacks[1](self.py_get_command_handler)
        self.get_context_menu_handler = self._callbacks[2](self.py_get_context_menu_handler)
        self.get_dialog_handler = self._callbacks[3](self.py_get_dialog_handler)
        self.get_display_handler = self._callbacks[4](self.py_get_display_handler)
        self.get_download_handler = self._callbacks[5](self.py_get_download_handler)
        self.get_drag_handler = self._callbacks[6](self.py_get_drag_handler)
        self.get_find_handler = self._callbacks[7](self.py_get_find_handler)
        self.get_focus_handler = self._callbacks[8](self.py_get_focus_handler)
        self.get_frame_handler = self._callbacks[9](self.py_get_frame_handler)
        self.get_permission_handler = self._callbacks[10](self.py_get_permission_handler)
        self.get_jsdialog_handler = self._callbacks[11](self.py_get_jsdialog_handler)
        self.get_keyboard_handler = self._callbacks[12](self.py_get_keyboard_handler)
        self.get_life_span_handler = self._callbacks[13](self.py_get_life_span_handler)
        self.get_load_handler = self._callbacks[14](self.py_get_load_handler)
        self.get_print_handler = self._callbacks[15](self.py_get_print_handler)
        self.get_render_handler = self._callbacks[16](self.py_get_render_handler)
        self.get_request_handler = self._callbacks[17](self.py_get_request_handler)
        self.on_process_message_received = self._callbacks[18](self.py_on_process_message_received)

    def py_get_audio_handler(self, xself):
        return None
    def py_get_command_handler(self, xself):
        return None
    def py_get_context_menu_handler(self, xself):
        return None
    def py_get_dialog_handler(self, xself):
        return None
    def py_get_display_handler(self, xself):
        return None
    def py_get_download_handler(self, xself):
        return None
    def py_get_drag_handler(self, xself):
        return None
    def py_get_find_handler(self, xself):
        return None
    def py_get_focus_handler(self, xself):
        return None
    def py_get_frame_handler(self, xself):
        return None
    def py_get_permission_handler(self, xself):
        return None
    def py_get_jsdialog_handler(self, xself):
        return None
    def py_get_keyboard_handler(self, xself):
        return None
    def py_get_life_span_handler(self, xself):
        return None
    def py_get_load_handler(self, xself):
        return None
    def py_get_print_handler(self, xself):
        return None
    def py_get_render_handler(self, xself):
        return None
    def py_get_request_handler(self, xself):
        return None
    def py_on_process_message_received(self, xself, browser, frame, source_process, message):
        return 0


class cef_command_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_chrome_command = self._callbacks[0](self.py_on_chrome_command)

    def py_on_chrome_command(self, xself, browser, command_id, disposition):
        return 0


class cef_command_line_t(Structure):
    _align_ = CEFALIGN


class cef_completion_callback_t(Structure):
    _align_ = CEFALIGN


class cef_context_menu_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_before_context_menu = self._callbacks[0](self.py_on_before_context_menu)
        self.run_context_menu = self._callbacks[1](self.py_run_context_menu)
        self.on_context_menu_command = self._callbacks[2](self.py_on_context_menu_command)
        self.on_context_menu_dismissed = self._callbacks[3](self.py_on_context_menu_dismissed)
        self.run_quick_menu = self._callbacks[4](self.py_run_quick_menu)
        self.on_quick_menu_command = self._callbacks[5](self.py_on_quick_menu_command)
        self.on_quick_menu_dismissed = self._callbacks[6](self.py_on_quick_menu_dismissed)

    def py_on_before_context_menu(self, xself, browser, frame, params, model):
        return 0
    def py_run_context_menu(self, xself, browser, frame, params, model, callback):
        return 0
    def py_on_context_menu_command(self, xself, browser, frame, params, command_id, event_flags):
        return 0
    def py_on_context_menu_dismissed(self, xself, browser, frame):
        return 0
    def py_run_quick_menu(self, xself, browser, frame, location, size, edit_state_flags, callback):
        return 0
    def py_on_quick_menu_command(self, xself, browser, frame, command_id, event_flags):
        return 0
    def py_on_quick_menu_dismissed(self, xself, browser, frame):
        return 0


class cef_context_menu_params_t(Structure):
    _align_ = CEFALIGN


class cef_cookie_access_filter_t(Structure):
    _align_ = CEFALIGN


class cef_cookie_manager_t(Structure):
    _align_ = CEFALIGN


class cef_cookie_visitor_t(Structure):
    _align_ = CEFALIGN


class cef_delete_cookies_callback_t(Structure):
    _align_ = CEFALIGN


class cef_dev_tools_message_observer_t(Structure):
    _align_ = CEFALIGN


class cef_dialog_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_file_dialog = self._callbacks[0](self.py_on_file_dialog)

    def py_on_file_dialog(self, xself, browser, mode, title, default_file_path, accept_filters, callback):
        return 0


class cef_dictionary_value_t(Structure):
    _align_ = CEFALIGN


class cef_display_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_address_change = self._callbacks[0](self.py_on_address_change)
        self.on_title_change = self._callbacks[1](self.py_on_title_change)
        self.on_favicon_urlchange = self._callbacks[2](self.py_on_favicon_urlchange)
        self.on_fullscreen_mode_change = self._callbacks[3](self.py_on_fullscreen_mode_change)
        self.on_tooltip = self._callbacks[4](self.py_on_tooltip)
        self.on_status_message = self._callbacks[5](self.py_on_status_message)
        self.on_console_message = self._callbacks[6](self.py_on_console_message)
        self.on_auto_resize = self._callbacks[7](self.py_on_auto_resize)
        self.on_loading_progress_change = self._callbacks[8](self.py_on_loading_progress_change)
        self.on_cursor_change = self._callbacks[9](self.py_on_cursor_change)
        self.on_media_access_change = self._callbacks[10](self.py_on_media_access_change)

    def py_on_address_change(self, xself, browser, frame, url):
        return 0
    def py_on_title_change(self, xself, browser, title):
        return 0
    def py_on_favicon_urlchange(self, xself, browser, icon_urls):
        return 0
    def py_on_fullscreen_mode_change(self, xself, browser, fullscreen):
        return 0
    def py_on_tooltip(self, xself, browser, text):
        return 0
    def py_on_status_message(self, xself, browser, value):
        return 0
    def py_on_console_message(self, xself, browser, level, message, source, line):
        return 0
    def py_on_auto_resize(self, xself, browser, new_size):
        return 0
    def py_on_loading_progress_change(self, xself, browser, progress):
        return 0
    def py_on_cursor_change(self, xself, browser, cursor, type, custom_cursor_info):
        return 0
    def py_on_media_access_change(self, xself, browser, has_video_access, has_audio_access):
        return 0


class cef_display_t(Structure):
    _align_ = CEFALIGN


class cef_domdocument_t(Structure):
    _align_ = CEFALIGN


class cef_domnode_t(Structure):
    _align_ = CEFALIGN


class cef_domvisitor_t(Structure):
    _align_ = CEFALIGN


class cef_download_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.can_download = self._callbacks[0](self.py_can_download)
        self.on_before_download = self._callbacks[1](self.py_on_before_download)
        self.on_download_updated = self._callbacks[2](self.py_on_download_updated)

    def py_can_download(self, xself, browser, url, request_method):
        return 0
    def py_on_before_download(self, xself, browser, download_item, suggested_name, callback):
        return 0
    def py_on_download_updated(self, xself, browser, download_item, callback):
        return 0


class cef_download_image_callback_t(Structure):
    _align_ = CEFALIGN


class cef_download_item_callback_t(Structure):
    _align_ = CEFALIGN


class cef_download_item_t(Structure):
    _align_ = CEFALIGN


class cef_drag_data_t(Structure):
    _align_ = CEFALIGN


class cef_drag_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_drag_enter = self._callbacks[0](self.py_on_drag_enter)
        self.on_draggable_regions_changed = self._callbacks[1](self.py_on_draggable_regions_changed)

    def py_on_drag_enter(self, xself, browser, dragData, mask):
        return 0
    def py_on_draggable_regions_changed(self, xself, browser, frame, regionsCount, regions):
        return 0


class cef_end_tracing_callback_t(Structure):
    _align_ = CEFALIGN


class cef_extension_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_extension_load_failed = self._callbacks[0](self.py_on_extension_load_failed)
        self.on_extension_loaded = self._callbacks[1](self.py_on_extension_loaded)
        self.on_extension_unloaded = self._callbacks[2](self.py_on_extension_unloaded)
        self.on_before_background_browser = self._callbacks[3](self.py_on_before_background_browser)
        self.on_before_browser = self._callbacks[4](self.py_on_before_browser)
        self.get_active_browser = self._callbacks[5](self.py_get_active_browser)
        self.can_access_browser = self._callbacks[6](self.py_can_access_browser)
        self.get_extension_resource = self._callbacks[7](self.py_get_extension_resource)

    def py_on_extension_load_failed(self, xself, result):
        return 0
    def py_on_extension_loaded(self, xself, extension):
        return 0
    def py_on_extension_unloaded(self, xself, extension):
        return 0
    def py_on_before_background_browser(self, xself, extension, url, client, settings):
        return 0
    def py_on_before_browser(self, xself, extension, browser, active_browser, index, url, active, windowInfo, client, settings):
        return 0
    def py_get_active_browser(self, xself, extension, browser, include_incognito):
        return None
    def py_can_access_browser(self, xself, extension, browser, include_incognito, target_browser):
        return 0
    def py_get_extension_resource(self, xself, extension, browser, file, callback):
        return 0


class cef_extension_t(Structure):
    _align_ = CEFALIGN


class cef_file_dialog_callback_t(Structure):
    _align_ = CEFALIGN


class cef_fill_layout_t(Structure):
    _align_ = CEFALIGN


class cef_find_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_find_result = self._callbacks[0](self.py_on_find_result)

    def py_on_find_result(self, xself, browser, identifier, count, selectionRect, activeMatchOrdinal, finalUpdate):
        return 0


class cef_focus_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_take_focus = self._callbacks[0](self.py_on_take_focus)
        self.on_set_focus = self._callbacks[1](self.py_on_set_focus)
        self.on_got_focus = self._callbacks[2](self.py_on_got_focus)

    def py_on_take_focus(self, xself, browser, next):
        return 0
    def py_on_set_focus(self, xself, browser, source):
        return 0
    def py_on_got_focus(self, xself, browser):
        return 0


class cef_frame_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_frame_created = self._callbacks[0](self.py_on_frame_created)
        self.on_frame_attached = self._callbacks[1](self.py_on_frame_attached)
        self.on_frame_detached = self._callbacks[2](self.py_on_frame_detached)
        self.on_main_frame_changed = self._callbacks[3](self.py_on_main_frame_changed)

    def py_on_frame_created(self, xself, browser, frame):
        return 0
    def py_on_frame_attached(self, xself, browser, frame, reattached):
        return 0
    def py_on_frame_detached(self, xself, browser, frame):
        return 0
    def py_on_main_frame_changed(self, xself, browser, old_frame, new_frame):
        return 0


class cef_frame_t(Structure):
    _align_ = CEFALIGN


class cef_get_extension_resource_callback_t(Structure):
    _align_ = CEFALIGN


class cef_image_t(Structure):
    _align_ = CEFALIGN


class cef_jsdialog_callback_t(Structure):
    _align_ = CEFALIGN


class cef_jsdialog_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_jsdialog = self._callbacks[0](self.py_on_jsdialog)
        self.on_before_unload_dialog = self._callbacks[1](self.py_on_before_unload_dialog)
        self.on_reset_dialog_state = self._callbacks[2](self.py_on_reset_dialog_state)
        self.on_dialog_closed = self._callbacks[3](self.py_on_dialog_closed)

    def py_on_jsdialog(self, xself, browser, origin_url, dialog_type, message_text, default_prompt_text, callback, suppress_message):
        return 0
    def py_on_before_unload_dialog(self, xself, browser, message_text, is_reload, callback):
        return 0
    def py_on_reset_dialog_state(self, xself, browser):
        return 0
    def py_on_dialog_closed(self, xself, browser):
        return 0


class cef_keyboard_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_pre_key_event = self._callbacks[0](self.py_on_pre_key_event)
        self.on_key_event = self._callbacks[1](self.py_on_key_event)

    def py_on_pre_key_event(self, xself, browser, event, os_event, is_keyboard_shortcut):
        return 0
    def py_on_key_event(self, xself, browser, event, os_event):
        return 0


class cef_label_button_t(Structure):
    _align_ = CEFALIGN


class cef_layout_t(Structure):
    _align_ = CEFALIGN


class cef_life_span_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_before_popup = self._callbacks[0](self.py_on_before_popup)
        self.on_after_created = self._callbacks[1](self.py_on_after_created)
        self.do_close = self._callbacks[2](self.py_do_close)
        self.on_before_close = self._callbacks[3](self.py_on_before_close)

    def py_on_before_popup(self, xself, browser, frame, target_url, target_frame_name, target_disposition, user_gesture, popupFeatures, windowInfo, client, settings, extra_info, no_javascript_access):
        return 0
    def py_on_after_created(self, xself, browser):
        return 0
    def py_do_close(self, xself, browser):
        return 0
    def py_on_before_close(self, xself, browser):
        return 0


class cef_list_value_t(Structure):
    _align_ = CEFALIGN


class cef_load_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_loading_state_change = self._callbacks[0](self.py_on_loading_state_change)
        self.on_load_start = self._callbacks[1](self.py_on_load_start)
        self.on_load_end = self._callbacks[2](self.py_on_load_end)
        self.on_load_error = self._callbacks[3](self.py_on_load_error)

    def py_on_loading_state_change(self, xself, browser, isLoading, canGoBack, canGoForward):
        return 0
    def py_on_load_start(self, xself, browser, frame, transition_type):
        return 0
    def py_on_load_end(self, xself, browser, frame, httpStatusCode):
        return 0
    def py_on_load_error(self, xself, browser, frame, errorCode, errorText, failedUrl):
        return 0


class cef_media_access_callback_t(Structure):
    _align_ = CEFALIGN


class cef_media_observer_t(Structure):
    _align_ = CEFALIGN


class cef_media_route_create_callback_t(Structure):
    _align_ = CEFALIGN


class cef_media_route_t(Structure):
    _align_ = CEFALIGN


class cef_media_router_t(Structure):
    _align_ = CEFALIGN


class cef_media_sink_device_info_callback_t(Structure):
    _align_ = CEFALIGN


class cef_media_sink_t(Structure):
    _align_ = CEFALIGN


class cef_media_source_t(Structure):
    _align_ = CEFALIGN


class cef_menu_button_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_menu_button_pressed_lock_t(Structure):
    _align_ = CEFALIGN


class cef_menu_button_t(Structure):
    _align_ = CEFALIGN


class cef_menu_model_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_menu_model_t(Structure):
    _align_ = CEFALIGN


class cef_navigation_entry_t(Structure):
    _align_ = CEFALIGN


class cef_navigation_entry_visitor_t(Structure):
    _align_ = CEFALIGN


class cef_overlay_controller_t(Structure):
    _align_ = CEFALIGN


class cef_panel_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_panel_t(Structure):
    _align_ = CEFALIGN


class cef_pdf_print_callback_t(Structure):
    _align_ = CEFALIGN


class cef_permission_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_request_media_access_permission = self._callbacks[0](self.py_on_request_media_access_permission)
        self.on_show_permission_prompt = self._callbacks[1](self.py_on_show_permission_prompt)
        self.on_dismiss_permission_prompt = self._callbacks[2](self.py_on_dismiss_permission_prompt)

    def py_on_request_media_access_permission(self, xself, browser, frame, requesting_origin, requested_permissions, callback):
        return 0
    def py_on_show_permission_prompt(self, xself, browser, prompt_id, requesting_origin, requested_permissions, callback):
        return 0
    def py_on_dismiss_permission_prompt(self, xself, browser, prompt_id, result):
        return 0


class cef_permission_prompt_callback_t(Structure):
    _align_ = CEFALIGN


class cef_post_data_element_t(Structure):
    _align_ = CEFALIGN


class cef_post_data_t(Structure):
    _align_ = CEFALIGN


class cef_preference_manager_t(Structure):
    _align_ = CEFALIGN


class cef_preference_registrar_t(Structure):
    _align_ = CEFALIGN


class cef_print_dialog_callback_t(Structure):
    _align_ = CEFALIGN


class cef_print_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_print_start = self._callbacks[0](self.py_on_print_start)
        self.on_print_settings = self._callbacks[1](self.py_on_print_settings)
        self.on_print_dialog = self._callbacks[2](self.py_on_print_dialog)
        self.on_print_job = self._callbacks[3](self.py_on_print_job)
        self.on_print_reset = self._callbacks[4](self.py_on_print_reset)
        self.get_pdf_paper_size = self._callbacks[5](self.py_get_pdf_paper_size)

    def py_on_print_start(self, xself, browser):
        return 0
    def py_on_print_settings(self, xself, browser, settings, get_defaults):
        return 0
    def py_on_print_dialog(self, xself, browser, has_selection, callback):
        return 0
    def py_on_print_job(self, xself, browser, document_name, pdf_file_path, callback):
        return 0
    def py_on_print_reset(self, xself, browser):
        return 0
    def py_get_pdf_paper_size(self, xself, browser, device_units_per_inch):
        return 0


class cef_print_job_callback_t(Structure):
    _align_ = CEFALIGN


class cef_print_settings_t(Structure):
    _align_ = CEFALIGN


class cef_process_message_t(Structure):
    _align_ = CEFALIGN


class cef_read_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.read = self._callbacks[0](self.py_read)
        self.seek = self._callbacks[1](self.py_seek)
        self.tell = self._callbacks[2](self.py_tell)
        self.eof = self._callbacks[3](self.py_eof)
        self.may_block = self._callbacks[4](self.py_may_block)

    def py_read(self, xself, ptr, size, n):
        return 0
    def py_seek(self, xself, offset, whence):
        return 0
    def py_tell(self, xself):
        return 0
    def py_eof(self, xself):
        return 0
    def py_may_block(self, xself):
        return 0


class cef_registration_t(Structure):
    _align_ = CEFALIGN


class cef_render_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.get_accessibility_handler = self._callbacks[0](self.py_get_accessibility_handler)
        self.get_root_screen_rect = self._callbacks[1](self.py_get_root_screen_rect)
        self.get_view_rect = self._callbacks[2](self.py_get_view_rect)
        self.get_screen_point = self._callbacks[3](self.py_get_screen_point)
        self.get_screen_info = self._callbacks[4](self.py_get_screen_info)
        self.on_popup_show = self._callbacks[5](self.py_on_popup_show)
        self.on_popup_size = self._callbacks[6](self.py_on_popup_size)
        self.on_paint = self._callbacks[7](self.py_on_paint)
        self.on_accelerated_paint = self._callbacks[8](self.py_on_accelerated_paint)
        self.get_touch_handle_size = self._callbacks[9](self.py_get_touch_handle_size)
        self.on_touch_handle_state_changed = self._callbacks[10](self.py_on_touch_handle_state_changed)
        self.start_dragging = self._callbacks[11](self.py_start_dragging)
        self.update_drag_cursor = self._callbacks[12](self.py_update_drag_cursor)
        self.on_scroll_offset_changed = self._callbacks[13](self.py_on_scroll_offset_changed)
        self.on_ime_composition_range_changed = self._callbacks[14](self.py_on_ime_composition_range_changed)
        self.on_text_selection_changed = self._callbacks[15](self.py_on_text_selection_changed)
        self.on_virtual_keyboard_requested = self._callbacks[16](self.py_on_virtual_keyboard_requested)

    def py_get_accessibility_handler(self, xself):
        return None
    def py_get_root_screen_rect(self, xself, browser, rect):
        return 0
    def py_get_view_rect(self, xself, browser, rect):
        return 0
    def py_get_screen_point(self, xself, browser, viewX, viewY, screenX, screenY):
        return 0
    def py_get_screen_info(self, xself, browser, screen_info):
        return 0
    def py_on_popup_show(self, xself, browser, show):
        return 0
    def py_on_popup_size(self, xself, browser, rect):
        return 0
    def py_on_paint(self, xself, browser, type, dirtyRectsCount, dirtyRects, buffer, width, height):
        return 0
    def py_on_accelerated_paint(self, xself, browser, type, dirtyRectsCount, dirtyRects, shared_handle):
        return 0
    def py_get_touch_handle_size(self, xself, browser, orientation, size):
        return 0
    def py_on_touch_handle_state_changed(self, xself, browser, state):
        return 0
    def py_start_dragging(self, xself, browser, drag_data, allowed_ops, x, y):
        return 0
    def py_update_drag_cursor(self, xself, browser, operation):
        return 0
    def py_on_scroll_offset_changed(self, xself, browser, x, y):
        return 0
    def py_on_ime_composition_range_changed(self, xself, browser, selected_range, character_boundsCount, character_bounds):
        return 0
    def py_on_text_selection_changed(self, xself, browser, selected_text, selected_range):
        return 0
    def py_on_virtual_keyboard_requested(self, xself, browser, input_mode):
        return 0


class cef_render_process_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_web_kit_initialized = self._callbacks[0](self.py_on_web_kit_initialized)
        self.on_browser_created = self._callbacks[1](self.py_on_browser_created)
        self.on_browser_destroyed = self._callbacks[2](self.py_on_browser_destroyed)
        self.get_load_handler = self._callbacks[3](self.py_get_load_handler)
        self.on_context_created = self._callbacks[4](self.py_on_context_created)
        self.on_context_released = self._callbacks[5](self.py_on_context_released)
        self.on_uncaught_exception = self._callbacks[6](self.py_on_uncaught_exception)
        self.on_focused_node_changed = self._callbacks[7](self.py_on_focused_node_changed)
        self.on_process_message_received = self._callbacks[8](self.py_on_process_message_received)

    def py_on_web_kit_initialized(self, xself):
        return 0
    def py_on_browser_created(self, xself, browser, extra_info):
        return 0
    def py_on_browser_destroyed(self, xself, browser):
        return 0
    def py_get_load_handler(self, xself):
        return None
    def py_on_context_created(self, xself, browser, frame, context):
        return 0
    def py_on_context_released(self, xself, browser, frame, context):
        return 0
    def py_on_uncaught_exception(self, xself, browser, frame, context, exception, stackTrace):
        return 0
    def py_on_focused_node_changed(self, xself, browser, frame, node):
        return 0
    def py_on_process_message_received(self, xself, browser, frame, source_process, message):
        return 0


class cef_request_context_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_request_context_initialized = self._callbacks[0](self.py_on_request_context_initialized)
        self.get_resource_request_handler = self._callbacks[1](self.py_get_resource_request_handler)

    def py_on_request_context_initialized(self, xself, request_context):
        return 0
    def py_get_resource_request_handler(self, xself, browser, frame, request, is_navigation, is_download, request_initiator, disable_default_handling):
        return None


class cef_request_context_t(Structure):
    _align_ = CEFALIGN


class cef_request_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_before_browse = self._callbacks[0](self.py_on_before_browse)
        self.on_open_urlfrom_tab = self._callbacks[1](self.py_on_open_urlfrom_tab)
        self.get_resource_request_handler = self._callbacks[2](self.py_get_resource_request_handler)
        self.get_auth_credentials = self._callbacks[3](self.py_get_auth_credentials)
        self.on_certificate_error = self._callbacks[4](self.py_on_certificate_error)
        self.on_select_client_certificate = self._callbacks[5](self.py_on_select_client_certificate)
        self.on_render_view_ready = self._callbacks[6](self.py_on_render_view_ready)
        self.on_render_process_terminated = self._callbacks[7](self.py_on_render_process_terminated)
        self.on_document_available_in_main_frame = self._callbacks[8](self.py_on_document_available_in_main_frame)

    def py_on_before_browse(self, xself, browser, frame, request, user_gesture, is_redirect):
        return 0
    def py_on_open_urlfrom_tab(self, xself, browser, frame, target_url, target_disposition, user_gesture):
        return 0
    def py_get_resource_request_handler(self, xself, browser, frame, request, is_navigation, is_download, request_initiator, disable_default_handling):
        return None
    def py_get_auth_credentials(self, xself, browser, origin_url, isProxy, host, port, realm, scheme, callback):
        return 0
    def py_on_certificate_error(self, xself, browser, cert_error, request_url, ssl_info, callback):
        return 0
    def py_on_select_client_certificate(self, xself, browser, isProxy, host, port, certificatesCount, certificates, callback):
        return 0
    def py_on_render_view_ready(self, xself, browser):
        return 0
    def py_on_render_process_terminated(self, xself, browser, status):
        return 0
    def py_on_document_available_in_main_frame(self, xself, browser):
        return 0


class cef_request_t(Structure):
    _align_ = CEFALIGN


class cef_resolve_callback_t(Structure):
    _align_ = CEFALIGN


class cef_resource_bundle_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.get_localized_string = self._callbacks[0](self.py_get_localized_string)
        self.get_data_resource = self._callbacks[1](self.py_get_data_resource)
        self.get_data_resource_for_scale = self._callbacks[2](self.py_get_data_resource_for_scale)
        # print("self.get_data_resource_for_scale", self.get_data_resource_for_scale)

    def py_get_localized_string(self, xself, string_id, string):
        return 0
    def py_get_data_resource(self, xself, resource_id, data, data_size):
        return 0
    def py_get_data_resource_for_scale(self, xself, resource_id, scale_factor, data, data_size):
        return 0


class cef_resource_bundle_t(Structure):
    _align_ = CEFALIGN


class cef_resource_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.open = self._callbacks[0](self.py_open)
        self.process_request = self._callbacks[1](self.py_process_request)
        self.get_response_headers = self._callbacks[2](self.py_get_response_headers)
        self.skip = self._callbacks[3](self.py_skip)
        self.read = self._callbacks[4](self.py_read)
        self.read_response = self._callbacks[5](self.py_read_response)
        self.cancel = self._callbacks[6](self.py_cancel)

    def py_open(self, xself, request, handle_request, callback):
        return 0
    def py_process_request(self, xself, request, callback):
        return 0
    def py_get_response_headers(self, xself, response, response_length, redirectUrl):
        return 0
    def py_skip(self, xself, bytes_to_skip, bytes_skipped, callback):
        return 0
    def py_read(self, xself, data_out, bytes_to_read, bytes_read, callback):
        return 0
    def py_read_response(self, xself, data_out, bytes_to_read, bytes_read, callback):
        return 0
    def py_cancel(self, xself):
        return 0


class cef_resource_read_callback_t(Structure):
    _align_ = CEFALIGN


class cef_resource_request_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.get_cookie_access_filter = self._callbacks[0](self.py_get_cookie_access_filter)
        self.on_before_resource_load = self._callbacks[1](self.py_on_before_resource_load)
        self.get_resource_handler = self._callbacks[2](self.py_get_resource_handler)
        self.on_resource_redirect = self._callbacks[3](self.py_on_resource_redirect)
        self.on_resource_response = self._callbacks[4](self.py_on_resource_response)
        self.get_resource_response_filter = self._callbacks[5](self.py_get_resource_response_filter)
        self.on_resource_load_complete = self._callbacks[6](self.py_on_resource_load_complete)
        self.on_protocol_execution = self._callbacks[7](self.py_on_protocol_execution)

    def py_get_cookie_access_filter(self, xself, browser, frame, request):
        return None
    def py_on_before_resource_load(self, xself, browser, frame, request, callback):
        return 0
    def py_get_resource_handler(self, xself, browser, frame, request):
        return None
    def py_on_resource_redirect(self, xself, browser, frame, request, response, new_url):
        return 0
    def py_on_resource_response(self, xself, browser, frame, request, response):
        return 0
    def py_get_resource_response_filter(self, xself, browser, frame, request, response):
        return None
    def py_on_resource_load_complete(self, xself, browser, frame, request, response, status, received_content_length):
        return 0
    def py_on_protocol_execution(self, xself, browser, frame, request, allow_os_execution):
        return 0


class cef_resource_skip_callback_t(Structure):
    _align_ = CEFALIGN


class cef_response_filter_t(Structure):
    _align_ = CEFALIGN


class cef_response_t(Structure):
    _align_ = CEFALIGN


class cef_run_context_menu_callback_t(Structure):
    _align_ = CEFALIGN


class cef_run_file_dialog_callback_t(Structure):
    _align_ = CEFALIGN


class cef_run_quick_menu_callback_t(Structure):
    _align_ = CEFALIGN


class cef_scheme_handler_factory_t(Structure):
    _align_ = CEFALIGN


class cef_scheme_registrar_t(Structure):
    _align_ = CEFALIGN


class cef_scroll_view_t(Structure):
    _align_ = CEFALIGN


class cef_select_client_certificate_callback_t(Structure):
    _align_ = CEFALIGN


class cef_server_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.on_server_created = self._callbacks[0](self.py_on_server_created)
        self.on_server_destroyed = self._callbacks[1](self.py_on_server_destroyed)
        self.on_client_connected = self._callbacks[2](self.py_on_client_connected)
        self.on_client_disconnected = self._callbacks[3](self.py_on_client_disconnected)
        self.on_http_request = self._callbacks[4](self.py_on_http_request)
        self.on_web_socket_request = self._callbacks[5](self.py_on_web_socket_request)
        self.on_web_socket_connected = self._callbacks[6](self.py_on_web_socket_connected)
        self.on_web_socket_message = self._callbacks[7](self.py_on_web_socket_message)

    def py_on_server_created(self, xself, server):
        return 0
    def py_on_server_destroyed(self, xself, server):
        return 0
    def py_on_client_connected(self, xself, server, connection_id):
        return 0
    def py_on_client_disconnected(self, xself, server, connection_id):
        return 0
    def py_on_http_request(self, xself, server, connection_id, client_address, request):
        return 0
    def py_on_web_socket_request(self, xself, server, connection_id, client_address, request, callback):
        return 0
    def py_on_web_socket_connected(self, xself, server, connection_id):
        return 0
    def py_on_web_socket_message(self, xself, server, connection_id, data, data_size):
        return 0


class cef_server_t(Structure):
    _align_ = CEFALIGN


class cef_set_cookie_callback_t(Structure):
    _align_ = CEFALIGN


class cef_shared_memory_region_t(Structure):
    _align_ = CEFALIGN


class cef_shared_process_message_builder_t(Structure):
    _align_ = CEFALIGN


class cef_sslinfo_t(Structure):
    _align_ = CEFALIGN


class cef_sslstatus_t(Structure):
    _align_ = CEFALIGN


class cef_stream_reader_t(Structure):
    _align_ = CEFALIGN


class cef_stream_writer_t(Structure):
    _align_ = CEFALIGN


class cef_string_visitor_t(Structure):
    _align_ = CEFALIGN


class cef_task_runner_t(Structure):
    _align_ = CEFALIGN


class cef_task_t(Structure):
    _align_ = CEFALIGN


class cef_textfield_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_textfield_t(Structure):
    _align_ = CEFALIGN


class cef_thread_t(Structure):
    _align_ = CEFALIGN


class cef_urlrequest_client_t(Structure):
    _align_ = CEFALIGN


class cef_urlrequest_t(Structure):
    _align_ = CEFALIGN


class cef_v8accessor_t(Structure):
    _align_ = CEFALIGN


class cef_v8array_buffer_release_callback_t(Structure):
    _align_ = CEFALIGN


class cef_v8context_t(Structure):
    _align_ = CEFALIGN


class cef_v8exception_t(Structure):
    _align_ = CEFALIGN


class cef_v8handler_t(Structure):
    _align_ = CEFALIGN


class cef_v8interceptor_t(Structure):
    _align_ = CEFALIGN


class cef_v8stack_frame_t(Structure):
    _align_ = CEFALIGN


class cef_v8stack_trace_t(Structure):
    _align_ = CEFALIGN


class cef_v8value_t(Structure):
    _align_ = CEFALIGN


class cef_value_t(Structure):
    _align_ = CEFALIGN


class cef_view_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_view_t(Structure):
    _align_ = CEFALIGN


class cef_waitable_event_t(Structure):
    _align_ = CEFALIGN


class cef_window_delegate_t(Structure):
    _align_ = CEFALIGN


class cef_window_t(Structure):
    _align_ = CEFALIGN


class cef_write_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        # _base = cef_base_ref_counted_t
        self._base.c_init()
        self._base.size = sizeof(self)
        self.write = self._callbacks[0](self.py_write)
        self.seek = self._callbacks[1](self.py_seek)
        self.tell = self._callbacks[2](self.py_tell)
        self.flush = self._callbacks[3](self.py_flush)
        self.may_block = self._callbacks[4](self.py_may_block)

    def py_write(self, xself, ptr, size, n):
        return 0
    def py_seek(self, xself, offset, whence):
        return 0
    def py_tell(self, xself):
        return 0
    def py_flush(self, xself):
        return 0
    def py_may_block(self, xself):
        return 0


class cef_x509cert_principal_t(Structure):
    _align_ = CEFALIGN


class cef_x509certificate_t(Structure):
    _align_ = CEFALIGN


class cef_xml_reader_t(Structure):
    _align_ = CEFALIGN


class cef_zip_reader_t(Structure):
    _align_ = CEFALIGN


cef_value_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_value_t)),
    CFUNCTYPE(cef_value_type_t, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(double, POINTER(cef_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_value_t), double),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_value_t), POINTER(cef_list_value_t)),
)
cef_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_value_t._callbacks[0]),
    ('is_owned', cef_value_t._callbacks[1]),
    ('is_read_only', cef_value_t._callbacks[2]),
    ('is_same', cef_value_t._callbacks[3]),
    ('is_equal', cef_value_t._callbacks[4]),
    ('copy', cef_value_t._callbacks[5]),
    ('get_type', cef_value_t._callbacks[6]),
    ('get_bool', cef_value_t._callbacks[7]),
    ('get_int', cef_value_t._callbacks[8]),
    ('get_double', cef_value_t._callbacks[9]),
    ('get_string', cef_value_t._callbacks[10]),
    ('get_binary', cef_value_t._callbacks[11]),
    ('get_dictionary', cef_value_t._callbacks[12]),
    ('get_list', cef_value_t._callbacks[13]),
    ('set_null', cef_value_t._callbacks[14]),
    ('set_bool', cef_value_t._callbacks[15]),
    ('set_int', cef_value_t._callbacks[16]),
    ('set_double', cef_value_t._callbacks[17]),
    ('set_string', cef_value_t._callbacks[18]),
    ('set_binary', cef_value_t._callbacks[19]),
    ('set_dictionary', cef_value_t._callbacks[20]),
    ('set_list', cef_value_t._callbacks[21]),
)


cef_accessibility_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t)),
    CFUNCTYPE(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t)),
)
cef_accessibility_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_accessibility_tree_change', cef_accessibility_handler_t._callbacks[0]),
    ('on_accessibility_location_change', cef_accessibility_handler_t._callbacks[1]),
)


cef_command_line_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_command_line_t)),
    CFUNCTYPE(c_int, POINTER(cef_command_line_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), c_int, POINTER(POINTER(char))),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), cef_string_list_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_command_line_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_command_line_t)),
    CFUNCTYPE(c_int, POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), cef_string_map_t),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t)),
)
cef_command_line_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_command_line_t._callbacks[0]),
    ('is_read_only', cef_command_line_t._callbacks[1]),
    ('copy', cef_command_line_t._callbacks[2]),
    ('init_from_argv', cef_command_line_t._callbacks[3]),
    ('init_from_string', cef_command_line_t._callbacks[4]),
    ('reset', cef_command_line_t._callbacks[5]),
    ('get_argv', cef_command_line_t._callbacks[6]),
    ('get_command_line_string', cef_command_line_t._callbacks[7]),
    ('get_program', cef_command_line_t._callbacks[8]),
    ('set_program', cef_command_line_t._callbacks[9]),
    ('has_switches', cef_command_line_t._callbacks[10]),
    ('has_switch', cef_command_line_t._callbacks[11]),
    ('get_switch_value', cef_command_line_t._callbacks[12]),
    ('get_switches', cef_command_line_t._callbacks[13]),
    ('append_switch', cef_command_line_t._callbacks[14]),
    ('append_switch_with_value', cef_command_line_t._callbacks[15]),
    ('has_arguments', cef_command_line_t._callbacks[16]),
    ('get_arguments', cef_command_line_t._callbacks[17]),
    ('append_argument', cef_command_line_t._callbacks[18]),
    ('prepend_wrapper', cef_command_line_t._callbacks[19]),
)


cef_scheme_registrar_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_scheme_registrar_t), POINTER(cef_string_t), c_int),
)
cef_scheme_registrar_t._fields_ = (
    ('_base', cef_base_scoped_t),
    ('add_custom_scheme', cef_scheme_registrar_t._callbacks[0]),
)


cef_app_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_app_t), POINTER(cef_string_t), POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_app_t), POINTER(cef_scheme_registrar_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_app_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_app_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_app_t)),
)
cef_app_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_before_command_line_processing', cef_app_t._callbacks[0]),
    ('on_register_custom_schemes', cef_app_t._callbacks[1]),
    ('get_resource_bundle_handler', cef_app_t._callbacks[2]),
    ('get_browser_process_handler', cef_app_t._callbacks[3]),
    ('get_render_process_handler', cef_app_t._callbacks[4]),
)


cef_browser_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_t), int64),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_t), POINTER(cef_string_t)),
    CFUNCTYPE(size_t, POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t), POINTER(size_t), POINTER(int64)),
    CFUNCTYPE(c_void, POINTER(cef_browser_t), cef_string_list_t),
)
cef_browser_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_browser_t._callbacks[0]),
    ('get_host', cef_browser_t._callbacks[1]),
    ('can_go_back', cef_browser_t._callbacks[2]),
    ('go_back', cef_browser_t._callbacks[3]),
    ('can_go_forward', cef_browser_t._callbacks[4]),
    ('go_forward', cef_browser_t._callbacks[5]),
    ('is_loading', cef_browser_t._callbacks[6]),
    ('xreload', cef_browser_t._callbacks[7]),
    ('reload_ignore_cache', cef_browser_t._callbacks[8]),
    ('stop_load', cef_browser_t._callbacks[9]),
    ('get_identifier', cef_browser_t._callbacks[10]),
    ('is_same', cef_browser_t._callbacks[11]),
    ('is_popup', cef_browser_t._callbacks[12]),
    ('has_document', cef_browser_t._callbacks[13]),
    ('get_main_frame', cef_browser_t._callbacks[14]),
    ('get_focused_frame', cef_browser_t._callbacks[15]),
    ('get_frame_byident', cef_browser_t._callbacks[16]),
    ('get_frame', cef_browser_t._callbacks[17]),
    ('get_frame_count', cef_browser_t._callbacks[18]),
    ('get_frame_identifiers', cef_browser_t._callbacks[19]),
    ('get_frame_names', cef_browser_t._callbacks[20]),
)


cef_audio_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t)),
    CFUNCTYPE(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(POINTER(float)), c_int, int64),
    CFUNCTYPE(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t)),
)
cef_audio_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_audio_parameters', cef_audio_handler_t._callbacks[0]),
    ('on_audio_stream_started', cef_audio_handler_t._callbacks[1]),
    ('on_audio_stream_packet', cef_audio_handler_t._callbacks[2]),
    ('on_audio_stream_stopped', cef_audio_handler_t._callbacks[3]),
    ('on_audio_stream_error', cef_audio_handler_t._callbacks[4]),
)


cef_auth_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_auth_callback_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_auth_callback_t)),
)
cef_auth_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_auth_callback_t._callbacks[0]),
    ('cancel', cef_auth_callback_t._callbacks[1]),
)


cef_before_download_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_before_download_callback_t), POINTER(cef_string_t), c_int),
)
cef_before_download_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_before_download_callback_t._callbacks[0]),
)


cef_binary_value_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_binary_value_t), POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_binary_value_t), POINTER(cef_binary_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_binary_value_t)),
    CFUNCTYPE(size_t, POINTER(cef_binary_value_t)),
    CFUNCTYPE(size_t, POINTER(cef_binary_value_t), POINTER(c_void), size_t, size_t),
)
cef_binary_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_binary_value_t._callbacks[0]),
    ('is_owned', cef_binary_value_t._callbacks[1]),
    ('is_same', cef_binary_value_t._callbacks[2]),
    ('is_equal', cef_binary_value_t._callbacks[3]),
    ('copy', cef_binary_value_t._callbacks[4]),
    ('get_size', cef_binary_value_t._callbacks[5]),
    ('get_data', cef_binary_value_t._callbacks[6]),
)


cef_layout_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_layout_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_layout_t)),
    CFUNCTYPE(c_int, POINTER(cef_layout_t)),
)
cef_layout_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('as_box_layout', cef_layout_t._callbacks[0]),
    ('as_fill_layout', cef_layout_t._callbacks[1]),
    ('is_valid', cef_layout_t._callbacks[2]),
)


cef_view_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_view_t), POINTER(cef_rect_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_view_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), POINTER(cef_size_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(cef_point_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), POINTER(cef_insets_t)),
    CFUNCTYPE(cef_insets_t, POINTER(cef_view_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_t), cef_color_t),
    CFUNCTYPE(cef_color_t, POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_view_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_t), POINTER(cef_view_t), POINTER(cef_point_t)),
)
cef_view_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('as_browser_view', cef_view_t._callbacks[0]),
    ('as_button', cef_view_t._callbacks[1]),
    ('as_panel', cef_view_t._callbacks[2]),
    ('as_scroll_view', cef_view_t._callbacks[3]),
    ('as_textfield', cef_view_t._callbacks[4]),
    ('get_type_string', cef_view_t._callbacks[5]),
    ('to_string', cef_view_t._callbacks[6]),
    ('is_valid', cef_view_t._callbacks[7]),
    ('is_attached', cef_view_t._callbacks[8]),
    ('is_same', cef_view_t._callbacks[9]),
    ('get_delegate', cef_view_t._callbacks[10]),
    ('get_window', cef_view_t._callbacks[11]),
    ('get_id', cef_view_t._callbacks[12]),
    ('set_id', cef_view_t._callbacks[13]),
    ('get_group_id', cef_view_t._callbacks[14]),
    ('set_group_id', cef_view_t._callbacks[15]),
    ('get_parent_view', cef_view_t._callbacks[16]),
    ('get_view_for_id', cef_view_t._callbacks[17]),
    ('set_bounds', cef_view_t._callbacks[18]),
    ('get_bounds', cef_view_t._callbacks[19]),
    ('get_bounds_in_screen', cef_view_t._callbacks[20]),
    ('set_size', cef_view_t._callbacks[21]),
    ('get_size', cef_view_t._callbacks[22]),
    ('set_position', cef_view_t._callbacks[23]),
    ('get_position', cef_view_t._callbacks[24]),
    ('set_insets', cef_view_t._callbacks[25]),
    ('get_insets', cef_view_t._callbacks[26]),
    ('get_preferred_size', cef_view_t._callbacks[27]),
    ('size_to_preferred_size', cef_view_t._callbacks[28]),
    ('get_minimum_size', cef_view_t._callbacks[29]),
    ('get_maximum_size', cef_view_t._callbacks[30]),
    ('get_height_for_width', cef_view_t._callbacks[31]),
    ('invalidate_layout', cef_view_t._callbacks[32]),
    ('set_visible', cef_view_t._callbacks[33]),
    ('is_visible', cef_view_t._callbacks[34]),
    ('is_drawn', cef_view_t._callbacks[35]),
    ('set_enabled', cef_view_t._callbacks[36]),
    ('is_enabled', cef_view_t._callbacks[37]),
    ('set_focusable', cef_view_t._callbacks[38]),
    ('is_focusable', cef_view_t._callbacks[39]),
    ('is_accessibility_focusable', cef_view_t._callbacks[40]),
    ('request_focus', cef_view_t._callbacks[41]),
    ('set_background_color', cef_view_t._callbacks[42]),
    ('get_background_color', cef_view_t._callbacks[43]),
    ('convert_point_to_screen', cef_view_t._callbacks[44]),
    ('convert_point_from_screen', cef_view_t._callbacks[45]),
    ('convert_point_to_window', cef_view_t._callbacks[46]),
    ('convert_point_from_window', cef_view_t._callbacks[47]),
    ('convert_point_to_view', cef_view_t._callbacks[48]),
    ('convert_point_from_view', cef_view_t._callbacks[49]),
)


cef_box_layout_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_box_layout_t), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_box_layout_t), POINTER(cef_view_t)),
)
cef_box_layout_t._fields_ = (
    ('_base', cef_layout_t),
    ('set_flex_for_view', cef_box_layout_t._callbacks[0]),
    ('clear_flex_for_view', cef_box_layout_t._callbacks[1]),
)


cef_run_file_dialog_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_run_file_dialog_callback_t), cef_string_list_t),
)
cef_run_file_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_file_dialog_dismissed', cef_run_file_dialog_callback_t._callbacks[0]),
)


cef_download_image_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_download_image_callback_t), POINTER(cef_string_t), c_int, POINTER(cef_image_t)),
)
cef_download_image_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_download_image_finished', cef_download_image_callback_t._callbacks[0]),
)


cef_pdf_print_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_pdf_print_callback_t), POINTER(cef_string_t), c_int),
)
cef_pdf_print_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_pdf_print_finished', cef_pdf_print_callback_t._callbacks[0]),
)


cef_client_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_client_t)),
    CFUNCTYPE(c_int, POINTER(cef_client_t), POINTER(cef_browser_t), POINTER(cef_frame_t), cef_process_id_t, POINTER(cef_process_message_t)),
)
cef_client_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_audio_handler', cef_client_t._callbacks[0]),
    ('get_command_handler', cef_client_t._callbacks[1]),
    ('get_context_menu_handler', cef_client_t._callbacks[2]),
    ('get_dialog_handler', cef_client_t._callbacks[3]),
    ('get_display_handler', cef_client_t._callbacks[4]),
    ('get_download_handler', cef_client_t._callbacks[5]),
    ('get_drag_handler', cef_client_t._callbacks[6]),
    ('get_find_handler', cef_client_t._callbacks[7]),
    ('get_focus_handler', cef_client_t._callbacks[8]),
    ('get_frame_handler', cef_client_t._callbacks[9]),
    ('get_permission_handler', cef_client_t._callbacks[10]),
    ('get_jsdialog_handler', cef_client_t._callbacks[11]),
    ('get_keyboard_handler', cef_client_t._callbacks[12]),
    ('get_life_span_handler', cef_client_t._callbacks[13]),
    ('get_load_handler', cef_client_t._callbacks[14]),
    ('get_print_handler', cef_client_t._callbacks[15]),
    ('get_render_handler', cef_client_t._callbacks[16]),
    ('get_request_handler', cef_client_t._callbacks[17]),
    ('on_process_message_received', cef_client_t._callbacks[18]),
)


cef_dictionary_value_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), c_int),
    CFUNCTYPE(size_t, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), cef_string_list_t),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(cef_value_type_t, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(double, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), double),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_list_value_t)),
)
cef_dictionary_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_dictionary_value_t._callbacks[0]),
    ('is_owned', cef_dictionary_value_t._callbacks[1]),
    ('is_read_only', cef_dictionary_value_t._callbacks[2]),
    ('is_same', cef_dictionary_value_t._callbacks[3]),
    ('is_equal', cef_dictionary_value_t._callbacks[4]),
    ('copy', cef_dictionary_value_t._callbacks[5]),
    ('get_size', cef_dictionary_value_t._callbacks[6]),
    ('clear', cef_dictionary_value_t._callbacks[7]),
    ('has_key', cef_dictionary_value_t._callbacks[8]),
    ('get_keys', cef_dictionary_value_t._callbacks[9]),
    ('remove', cef_dictionary_value_t._callbacks[10]),
    ('get_type', cef_dictionary_value_t._callbacks[11]),
    ('get_value', cef_dictionary_value_t._callbacks[12]),
    ('get_bool', cef_dictionary_value_t._callbacks[13]),
    ('get_int', cef_dictionary_value_t._callbacks[14]),
    ('get_double', cef_dictionary_value_t._callbacks[15]),
    ('get_string', cef_dictionary_value_t._callbacks[16]),
    ('get_binary', cef_dictionary_value_t._callbacks[17]),
    ('get_dictionary', cef_dictionary_value_t._callbacks[18]),
    ('get_list', cef_dictionary_value_t._callbacks[19]),
    ('set_value', cef_dictionary_value_t._callbacks[20]),
    ('set_null', cef_dictionary_value_t._callbacks[21]),
    ('set_bool', cef_dictionary_value_t._callbacks[22]),
    ('set_int', cef_dictionary_value_t._callbacks[23]),
    ('set_double', cef_dictionary_value_t._callbacks[24]),
    ('set_string', cef_dictionary_value_t._callbacks[25]),
    ('set_binary', cef_dictionary_value_t._callbacks[26]),
    ('set_dictionary', cef_dictionary_value_t._callbacks[27]),
    ('set_list', cef_dictionary_value_t._callbacks[28]),
)


cef_dev_tools_message_observer_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), c_int, c_int, POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t)),
)
cef_dev_tools_message_observer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_dev_tools_message', cef_dev_tools_message_observer_t._callbacks[0]),
    ('on_dev_tools_method_result', cef_dev_tools_message_observer_t._callbacks[1]),
    ('on_dev_tools_event', cef_dev_tools_message_observer_t._callbacks[2]),
    ('on_dev_tools_agent_attached', cef_dev_tools_message_observer_t._callbacks[3]),
    ('on_dev_tools_agent_detached', cef_dev_tools_message_observer_t._callbacks[4]),
)


cef_navigation_entry_visitor_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_navigation_entry_visitor_t), POINTER(cef_navigation_entry_t), c_int, c_int, c_int),
)
cef_navigation_entry_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('visit', cef_navigation_entry_visitor_t._callbacks[0]),
)


cef_drag_data_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(size_t, POINTER(cef_drag_data_t), POINTER(cef_stream_writer_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_drag_data_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_drag_data_t)),
    CFUNCTYPE(cef_point_t, POINTER(cef_drag_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_drag_data_t)),
)
cef_drag_data_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('clone', cef_drag_data_t._callbacks[0]),
    ('is_read_only', cef_drag_data_t._callbacks[1]),
    ('is_link', cef_drag_data_t._callbacks[2]),
    ('is_fragment', cef_drag_data_t._callbacks[3]),
    ('is_file', cef_drag_data_t._callbacks[4]),
    ('get_link_url', cef_drag_data_t._callbacks[5]),
    ('get_link_title', cef_drag_data_t._callbacks[6]),
    ('get_link_metadata', cef_drag_data_t._callbacks[7]),
    ('get_fragment_text', cef_drag_data_t._callbacks[8]),
    ('get_fragment_html', cef_drag_data_t._callbacks[9]),
    ('get_fragment_base_url', cef_drag_data_t._callbacks[10]),
    ('get_file_name', cef_drag_data_t._callbacks[11]),
    ('get_file_contents', cef_drag_data_t._callbacks[12]),
    ('get_file_names', cef_drag_data_t._callbacks[13]),
    ('set_link_url', cef_drag_data_t._callbacks[14]),
    ('set_link_title', cef_drag_data_t._callbacks[15]),
    ('set_link_metadata', cef_drag_data_t._callbacks[16]),
    ('set_fragment_text', cef_drag_data_t._callbacks[17]),
    ('set_fragment_html', cef_drag_data_t._callbacks[18]),
    ('set_fragment_base_url', cef_drag_data_t._callbacks[19]),
    ('reset_file_contents', cef_drag_data_t._callbacks[20]),
    ('add_file', cef_drag_data_t._callbacks[21]),
    ('clear_filenames', cef_drag_data_t._callbacks[22]),
    ('get_image', cef_drag_data_t._callbacks[23]),
    ('get_image_hotspot', cef_drag_data_t._callbacks[24]),
    ('has_image', cef_drag_data_t._callbacks[25]),
)


cef_browser_host_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(cef_window_handle_t, POINTER(cef_browser_host_t)),
    CFUNCTYPE(cef_window_handle_t, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t)),
    CFUNCTYPE(double, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), double),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), cef_file_dialog_mode_t, POINTER(cef_string_t), POINTER(cef_string_t), cef_string_list_t, POINTER(cef_run_file_dialog_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), c_int, uint32, c_int, POINTER(cef_download_image_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), POINTER(cef_pdf_print_settings_t), POINTER(cef_pdf_print_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), c_int, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_window_info_t), POINTER(cef_client_t), POINTER(cef_browser_settings_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t), c_int, POINTER(cef_string_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t), POINTER(cef_dev_tools_message_observer_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_navigation_entry_visitor_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), cef_paint_element_type_t),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_key_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), cef_mouse_button_type_t, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_touch_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), size_t, POINTER(cef_composition_underline_t), POINTER(cef_range_t), POINTER(cef_range_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), POINTER(cef_range_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_drag_data_t), POINTER(cef_mouse_event_t), cef_drag_operations_mask_t),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), cef_drag_operations_mask_t),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int, c_int, cef_drag_operations_mask_t),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), cef_state_t),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int, POINTER(cef_size_t), POINTER(cef_size_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_host_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_browser_host_t)),
)
cef_browser_host_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_browser', cef_browser_host_t._callbacks[0]),
    ('close_browser', cef_browser_host_t._callbacks[1]),
    ('try_close_browser', cef_browser_host_t._callbacks[2]),
    ('set_focus', cef_browser_host_t._callbacks[3]),
    ('get_window_handle', cef_browser_host_t._callbacks[4]),
    ('get_opener_window_handle', cef_browser_host_t._callbacks[5]),
    ('has_view', cef_browser_host_t._callbacks[6]),
    ('get_client', cef_browser_host_t._callbacks[7]),
    ('get_request_context', cef_browser_host_t._callbacks[8]),
    ('get_zoom_level', cef_browser_host_t._callbacks[9]),
    ('set_zoom_level', cef_browser_host_t._callbacks[10]),
    ('run_file_dialog', cef_browser_host_t._callbacks[11]),
    ('start_download', cef_browser_host_t._callbacks[12]),
    ('download_image', cef_browser_host_t._callbacks[13]),
    ('print', cef_browser_host_t._callbacks[14]),
    ('print_to_pdf', cef_browser_host_t._callbacks[15]),
    ('find', cef_browser_host_t._callbacks[16]),
    ('stop_finding', cef_browser_host_t._callbacks[17]),
    ('show_dev_tools', cef_browser_host_t._callbacks[18]),
    ('close_dev_tools', cef_browser_host_t._callbacks[19]),
    ('has_dev_tools', cef_browser_host_t._callbacks[20]),
    ('send_dev_tools_message', cef_browser_host_t._callbacks[21]),
    ('execute_dev_tools_method', cef_browser_host_t._callbacks[22]),
    ('add_dev_tools_message_observer', cef_browser_host_t._callbacks[23]),
    ('get_navigation_entries', cef_browser_host_t._callbacks[24]),
    ('replace_misspelling', cef_browser_host_t._callbacks[25]),
    ('add_word_to_dictionary', cef_browser_host_t._callbacks[26]),
    ('is_window_rendering_disabled', cef_browser_host_t._callbacks[27]),
    ('was_resized', cef_browser_host_t._callbacks[28]),
    ('was_hidden', cef_browser_host_t._callbacks[29]),
    ('notify_screen_info_changed', cef_browser_host_t._callbacks[30]),
    ('invalidate', cef_browser_host_t._callbacks[31]),
    ('send_external_begin_frame', cef_browser_host_t._callbacks[32]),
    ('send_key_event', cef_browser_host_t._callbacks[33]),
    ('send_mouse_click_event', cef_browser_host_t._callbacks[34]),
    ('send_mouse_move_event', cef_browser_host_t._callbacks[35]),
    ('send_mouse_wheel_event', cef_browser_host_t._callbacks[36]),
    ('send_touch_event', cef_browser_host_t._callbacks[37]),
    ('send_capture_lost_event', cef_browser_host_t._callbacks[38]),
    ('notify_move_or_resize_started', cef_browser_host_t._callbacks[39]),
    ('get_windowless_frame_rate', cef_browser_host_t._callbacks[40]),
    ('set_windowless_frame_rate', cef_browser_host_t._callbacks[41]),
    ('ime_set_composition', cef_browser_host_t._callbacks[42]),
    ('ime_commit_text', cef_browser_host_t._callbacks[43]),
    ('ime_finish_composing_text', cef_browser_host_t._callbacks[44]),
    ('ime_cancel_composition', cef_browser_host_t._callbacks[45]),
    ('drag_target_drag_enter', cef_browser_host_t._callbacks[46]),
    ('drag_target_drag_over', cef_browser_host_t._callbacks[47]),
    ('drag_target_drag_leave', cef_browser_host_t._callbacks[48]),
    ('drag_target_drop', cef_browser_host_t._callbacks[49]),
    ('drag_source_ended_at', cef_browser_host_t._callbacks[50]),
    ('drag_source_system_drag_ended', cef_browser_host_t._callbacks[51]),
    ('get_visible_navigation_entry', cef_browser_host_t._callbacks[52]),
    ('set_accessibility_state', cef_browser_host_t._callbacks[53]),
    ('set_auto_resize_enabled', cef_browser_host_t._callbacks[54]),
    ('get_extension', cef_browser_host_t._callbacks[55]),
    ('is_background_host', cef_browser_host_t._callbacks[56]),
    ('set_audio_muted', cef_browser_host_t._callbacks[57]),
    ('is_audio_muted', cef_browser_host_t._callbacks[58]),
)


cef_preference_registrar_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_preference_registrar_t), POINTER(cef_string_t), POINTER(cef_value_t)),
)
cef_preference_registrar_t._fields_ = (
    ('_base', cef_base_scoped_t),
    ('add_preference', cef_preference_registrar_t._callbacks[0]),
)


cef_browser_process_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_browser_process_handler_t), cef_preferences_type_t, POINTER(cef_preference_registrar_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_process_handler_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_process_handler_t), POINTER(cef_command_line_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_process_handler_t), int64),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_process_handler_t)),
)
cef_browser_process_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_register_custom_preferences', cef_browser_process_handler_t._callbacks[0]),
    ('on_context_initialized', cef_browser_process_handler_t._callbacks[1]),
    ('on_before_child_process_launch', cef_browser_process_handler_t._callbacks[2]),
    ('on_schedule_message_pump_work', cef_browser_process_handler_t._callbacks[3]),
    ('get_default_client', cef_browser_process_handler_t._callbacks[4]),
)


cef_view_delegate_t._callbacks = (
    CFUNCTYPE(cef_size_t, POINTER(cef_view_delegate_t), POINTER(cef_view_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_delegate_t), POINTER(cef_view_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_view_delegate_t), POINTER(cef_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_view_delegate_t), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t), c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t), c_int, POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t), POINTER(cef_rect_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_view_delegate_t), POINTER(cef_view_t)),
)
cef_view_delegate_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_preferred_size', cef_view_delegate_t._callbacks[0]),
    ('get_minimum_size', cef_view_delegate_t._callbacks[1]),
    ('get_maximum_size', cef_view_delegate_t._callbacks[2]),
    ('get_height_for_width', cef_view_delegate_t._callbacks[3]),
    ('on_parent_view_changed', cef_view_delegate_t._callbacks[4]),
    ('on_child_view_changed', cef_view_delegate_t._callbacks[5]),
    ('on_window_changed', cef_view_delegate_t._callbacks[6]),
    ('on_layout_changed', cef_view_delegate_t._callbacks[7]),
    ('on_focus', cef_view_delegate_t._callbacks[8]),
    ('on_blur', cef_view_delegate_t._callbacks[9]),
)


cef_browser_view_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_view_t), c_int),
)
cef_browser_view_t._fields_ = (
    ('_base', cef_view_t),
    ('get_browser', cef_browser_view_t._callbacks[0]),
    ('get_chrome_toolbar', cef_browser_view_t._callbacks[1]),
    ('set_prefer_accelerators', cef_browser_view_t._callbacks[2]),
)


cef_browser_view_delegate_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_browser_view_delegate_t), POINTER(cef_browser_view_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_browser_view_delegate_t), POINTER(cef_browser_view_t), POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_browser_view_delegate_t), POINTER(cef_browser_view_t), POINTER(cef_browser_settings_t), POINTER(cef_client_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_browser_view_delegate_t), POINTER(cef_browser_view_t), POINTER(cef_browser_view_t), c_int),
    CFUNCTYPE(cef_chrome_toolbar_type_t, POINTER(cef_browser_view_delegate_t)),
)
cef_browser_view_delegate_t._fields_ = (
    ('_base', cef_view_delegate_t),
    ('on_browser_created', cef_browser_view_delegate_t._callbacks[0]),
    ('on_browser_destroyed', cef_browser_view_delegate_t._callbacks[1]),
    ('get_delegate_for_popup_browser_view', cef_browser_view_delegate_t._callbacks[2]),
    ('on_popup_browser_view_created', cef_browser_view_delegate_t._callbacks[3]),
    ('get_chrome_toolbar_type', cef_browser_view_delegate_t._callbacks[4]),
)


cef_button_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_button_t)),
    CFUNCTYPE(c_void, POINTER(cef_button_t), cef_button_state_t),
    CFUNCTYPE(cef_button_state_t, POINTER(cef_button_t)),
    CFUNCTYPE(c_void, POINTER(cef_button_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_button_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_button_t), POINTER(cef_string_t)),
)
cef_button_t._fields_ = (
    ('_base', cef_view_t),
    ('as_label_button', cef_button_t._callbacks[0]),
    ('set_state', cef_button_t._callbacks[1]),
    ('get_state', cef_button_t._callbacks[2]),
    ('set_ink_drop_enabled', cef_button_t._callbacks[3]),
    ('set_tooltip_text', cef_button_t._callbacks[4]),
    ('set_accessible_name', cef_button_t._callbacks[5]),
)


cef_button_delegate_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_button_delegate_t), POINTER(cef_button_t)),
    CFUNCTYPE(c_void, POINTER(cef_button_delegate_t), POINTER(cef_button_t)),
)
cef_button_delegate_t._fields_ = (
    ('_base', cef_view_delegate_t),
    ('on_button_pressed', cef_button_delegate_t._callbacks[0]),
    ('on_button_state_changed', cef_button_delegate_t._callbacks[1]),
)


cef_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_callback_t)),
)
cef_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_callback_t._callbacks[0]),
    ('cancel', cef_callback_t._callbacks[1]),
)


cef_command_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_command_handler_t), POINTER(cef_browser_t), c_int, cef_window_open_disposition_t),
)
cef_command_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_chrome_command', cef_command_handler_t._callbacks[0]),
)


cef_completion_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_completion_callback_t)),
)
cef_completion_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_complete', cef_completion_callback_t._callbacks[0]),
)


cef_frame_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_string_visitor_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_string_visitor_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t)),
    CFUNCTYPE(int64, POINTER(cef_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), POINTER(cef_domvisitor_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_urlrequest_client_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_t), cef_process_id_t, POINTER(cef_process_message_t)),
)
cef_frame_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_frame_t._callbacks[0]),
    ('undo', cef_frame_t._callbacks[1]),
    ('redo', cef_frame_t._callbacks[2]),
    ('cut', cef_frame_t._callbacks[3]),
    ('copy', cef_frame_t._callbacks[4]),
    ('paste', cef_frame_t._callbacks[5]),
    ('xdel', cef_frame_t._callbacks[6]),
    ('select_all', cef_frame_t._callbacks[7]),
    ('view_source', cef_frame_t._callbacks[8]),
    ('get_source', cef_frame_t._callbacks[9]),
    ('get_text', cef_frame_t._callbacks[10]),
    ('load_request', cef_frame_t._callbacks[11]),
    ('load_url', cef_frame_t._callbacks[12]),
    ('execute_java_script', cef_frame_t._callbacks[13]),
    ('is_main', cef_frame_t._callbacks[14]),
    ('is_focused', cef_frame_t._callbacks[15]),
    ('get_name', cef_frame_t._callbacks[16]),
    ('get_identifier', cef_frame_t._callbacks[17]),
    ('get_parent', cef_frame_t._callbacks[18]),
    ('get_url', cef_frame_t._callbacks[19]),
    ('get_browser', cef_frame_t._callbacks[20]),
    ('get_v8context', cef_frame_t._callbacks[21]),
    ('visit_dom', cef_frame_t._callbacks[22]),
    ('create_urlrequest', cef_frame_t._callbacks[23]),
    ('send_process_message', cef_frame_t._callbacks[24]),
)


cef_context_menu_params_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(cef_context_menu_type_flags_t, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(cef_context_menu_media_type_t, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(cef_context_menu_media_state_flags_t, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t), cef_string_list_t),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(cef_context_menu_edit_state_flags_t, POINTER(cef_context_menu_params_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_params_t)),
)
cef_context_menu_params_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_xcoord', cef_context_menu_params_t._callbacks[0]),
    ('get_ycoord', cef_context_menu_params_t._callbacks[1]),
    ('get_type_flags', cef_context_menu_params_t._callbacks[2]),
    ('get_link_url', cef_context_menu_params_t._callbacks[3]),
    ('get_unfiltered_link_url', cef_context_menu_params_t._callbacks[4]),
    ('get_source_url', cef_context_menu_params_t._callbacks[5]),
    ('has_image_contents', cef_context_menu_params_t._callbacks[6]),
    ('get_title_text', cef_context_menu_params_t._callbacks[7]),
    ('get_page_url', cef_context_menu_params_t._callbacks[8]),
    ('get_frame_url', cef_context_menu_params_t._callbacks[9]),
    ('get_frame_charset', cef_context_menu_params_t._callbacks[10]),
    ('get_media_type', cef_context_menu_params_t._callbacks[11]),
    ('get_media_state_flags', cef_context_menu_params_t._callbacks[12]),
    ('get_selection_text', cef_context_menu_params_t._callbacks[13]),
    ('get_misspelled_word', cef_context_menu_params_t._callbacks[14]),
    ('get_dictionary_suggestions', cef_context_menu_params_t._callbacks[15]),
    ('is_editable', cef_context_menu_params_t._callbacks[16]),
    ('is_spell_check_enabled', cef_context_menu_params_t._callbacks[17]),
    ('get_edit_state_flags', cef_context_menu_params_t._callbacks[18]),
    ('is_custom_menu', cef_context_menu_params_t._callbacks[19]),
)


cef_menu_model_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t)),
    CFUNCTYPE(size_t, POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int, POINTER(cef_string_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), size_t, c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, POINTER(cef_string_t)),
    CFUNCTYPE(cef_menu_item_type_t, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(cef_menu_item_type_t, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, c_int, c_int, c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, c_int, c_int, c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), size_t, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, cef_menu_color_type_t, cef_color_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, cef_menu_color_type_t, cef_color_t),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, cef_menu_color_type_t, POINTER(cef_color_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, cef_menu_color_type_t, POINTER(cef_color_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t)),
)
cef_menu_model_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_sub_menu', cef_menu_model_t._callbacks[0]),
    ('clear', cef_menu_model_t._callbacks[1]),
    ('get_count', cef_menu_model_t._callbacks[2]),
    ('add_separator', cef_menu_model_t._callbacks[3]),
    ('add_item', cef_menu_model_t._callbacks[4]),
    ('add_check_item', cef_menu_model_t._callbacks[5]),
    ('add_radio_item', cef_menu_model_t._callbacks[6]),
    ('add_sub_menu', cef_menu_model_t._callbacks[7]),
    ('insert_separator_at', cef_menu_model_t._callbacks[8]),
    ('insert_item_at', cef_menu_model_t._callbacks[9]),
    ('insert_check_item_at', cef_menu_model_t._callbacks[10]),
    ('insert_radio_item_at', cef_menu_model_t._callbacks[11]),
    ('insert_sub_menu_at', cef_menu_model_t._callbacks[12]),
    ('remove', cef_menu_model_t._callbacks[13]),
    ('remove_at', cef_menu_model_t._callbacks[14]),
    ('get_index_of', cef_menu_model_t._callbacks[15]),
    ('get_command_id_at', cef_menu_model_t._callbacks[16]),
    ('set_command_id_at', cef_menu_model_t._callbacks[17]),
    ('get_label', cef_menu_model_t._callbacks[18]),
    ('get_label_at', cef_menu_model_t._callbacks[19]),
    ('set_label', cef_menu_model_t._callbacks[20]),
    ('set_label_at', cef_menu_model_t._callbacks[21]),
    ('get_type', cef_menu_model_t._callbacks[22]),
    ('get_type_at', cef_menu_model_t._callbacks[23]),
    ('get_group_id', cef_menu_model_t._callbacks[24]),
    ('get_group_id_at', cef_menu_model_t._callbacks[25]),
    ('set_group_id', cef_menu_model_t._callbacks[26]),
    ('set_group_id_at', cef_menu_model_t._callbacks[27]),
    ('get_sub_menu', cef_menu_model_t._callbacks[28]),
    ('get_sub_menu_at', cef_menu_model_t._callbacks[29]),
    ('is_visible', cef_menu_model_t._callbacks[30]),
    ('is_visible_at', cef_menu_model_t._callbacks[31]),
    ('set_visible', cef_menu_model_t._callbacks[32]),
    ('set_visible_at', cef_menu_model_t._callbacks[33]),
    ('is_enabled', cef_menu_model_t._callbacks[34]),
    ('is_enabled_at', cef_menu_model_t._callbacks[35]),
    ('set_enabled', cef_menu_model_t._callbacks[36]),
    ('set_enabled_at', cef_menu_model_t._callbacks[37]),
    ('is_checked', cef_menu_model_t._callbacks[38]),
    ('is_checked_at', cef_menu_model_t._callbacks[39]),
    ('set_checked', cef_menu_model_t._callbacks[40]),
    ('set_checked_at', cef_menu_model_t._callbacks[41]),
    ('has_accelerator', cef_menu_model_t._callbacks[42]),
    ('has_accelerator_at', cef_menu_model_t._callbacks[43]),
    ('set_accelerator', cef_menu_model_t._callbacks[44]),
    ('set_accelerator_at', cef_menu_model_t._callbacks[45]),
    ('remove_accelerator', cef_menu_model_t._callbacks[46]),
    ('remove_accelerator_at', cef_menu_model_t._callbacks[47]),
    ('get_accelerator', cef_menu_model_t._callbacks[48]),
    ('get_accelerator_at', cef_menu_model_t._callbacks[49]),
    ('set_color', cef_menu_model_t._callbacks[50]),
    ('set_color_at', cef_menu_model_t._callbacks[51]),
    ('get_color', cef_menu_model_t._callbacks[52]),
    ('get_color_at', cef_menu_model_t._callbacks[53]),
    ('set_font_list', cef_menu_model_t._callbacks[54]),
    ('set_font_list_at', cef_menu_model_t._callbacks[55]),
)


cef_run_context_menu_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_run_context_menu_callback_t), c_int, cef_event_flags_t),
    CFUNCTYPE(c_void, POINTER(cef_run_context_menu_callback_t)),
)
cef_run_context_menu_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_run_context_menu_callback_t._callbacks[0]),
    ('cancel', cef_run_context_menu_callback_t._callbacks[1]),
)


cef_run_quick_menu_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_run_quick_menu_callback_t), c_int, cef_event_flags_t),
    CFUNCTYPE(c_void, POINTER(cef_run_quick_menu_callback_t)),
)
cef_run_quick_menu_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_run_quick_menu_callback_t._callbacks[0]),
    ('cancel', cef_run_quick_menu_callback_t._callbacks[1]),
)


cef_context_menu_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t), POINTER(cef_run_context_menu_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), c_int, cef_event_flags_t),
    CFUNCTYPE(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_point_t), POINTER(cef_size_t), cef_quick_menu_edit_state_flags_t, POINTER(cef_run_quick_menu_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int, cef_event_flags_t),
    CFUNCTYPE(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t)),
)
cef_context_menu_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_before_context_menu', cef_context_menu_handler_t._callbacks[0]),
    ('run_context_menu', cef_context_menu_handler_t._callbacks[1]),
    ('on_context_menu_command', cef_context_menu_handler_t._callbacks[2]),
    ('on_context_menu_dismissed', cef_context_menu_handler_t._callbacks[3]),
    ('run_quick_menu', cef_context_menu_handler_t._callbacks[4]),
    ('on_quick_menu_command', cef_context_menu_handler_t._callbacks[5]),
    ('on_quick_menu_dismissed', cef_context_menu_handler_t._callbacks[6]),
)


cef_request_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_request_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t), cef_referrer_policy_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t)),
    CFUNCTYPE(cef_referrer_policy_t, POINTER(cef_request_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_post_data_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), cef_string_multimap_t),
    CFUNCTYPE(c_void, POINTER(cef_request_t), cef_string_multimap_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_post_data_t), cef_string_multimap_t),
    CFUNCTYPE(c_int, POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_t), POINTER(cef_string_t)),
    CFUNCTYPE(cef_resource_type_t, POINTER(cef_request_t)),
    CFUNCTYPE(cef_transition_type_t, POINTER(cef_request_t)),
    CFUNCTYPE(uint64, POINTER(cef_request_t)),
)
cef_request_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_read_only', cef_request_t._callbacks[0]),
    ('get_url', cef_request_t._callbacks[1]),
    ('set_url', cef_request_t._callbacks[2]),
    ('get_method', cef_request_t._callbacks[3]),
    ('set_method', cef_request_t._callbacks[4]),
    ('set_referrer', cef_request_t._callbacks[5]),
    ('get_referrer_url', cef_request_t._callbacks[6]),
    ('get_referrer_policy', cef_request_t._callbacks[7]),
    ('get_post_data', cef_request_t._callbacks[8]),
    ('set_post_data', cef_request_t._callbacks[9]),
    ('get_header_map', cef_request_t._callbacks[10]),
    ('set_header_map', cef_request_t._callbacks[11]),
    ('get_header_by_name', cef_request_t._callbacks[12]),
    ('set_header_by_name', cef_request_t._callbacks[13]),
    ('set', cef_request_t._callbacks[14]),
    ('get_flags', cef_request_t._callbacks[15]),
    ('set_flags', cef_request_t._callbacks[16]),
    ('get_first_party_for_cookies', cef_request_t._callbacks[17]),
    ('set_first_party_for_cookies', cef_request_t._callbacks[18]),
    ('get_resource_type', cef_request_t._callbacks[19]),
    ('get_transition_type', cef_request_t._callbacks[20]),
    ('get_identifier', cef_request_t._callbacks[21]),
)


cef_response_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_response_t)),
    CFUNCTYPE(cef_errorcode_t, POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), cef_errorcode_t),
    CFUNCTYPE(c_int, POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_response_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_response_t), cef_string_multimap_t),
    CFUNCTYPE(c_void, POINTER(cef_response_t), cef_string_multimap_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_response_t), POINTER(cef_string_t)),
)
cef_response_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_read_only', cef_response_t._callbacks[0]),
    ('get_error', cef_response_t._callbacks[1]),
    ('set_error', cef_response_t._callbacks[2]),
    ('get_status', cef_response_t._callbacks[3]),
    ('set_status', cef_response_t._callbacks[4]),
    ('get_status_text', cef_response_t._callbacks[5]),
    ('set_status_text', cef_response_t._callbacks[6]),
    ('get_mime_type', cef_response_t._callbacks[7]),
    ('set_mime_type', cef_response_t._callbacks[8]),
    ('get_charset', cef_response_t._callbacks[9]),
    ('set_charset', cef_response_t._callbacks[10]),
    ('get_header_by_name', cef_response_t._callbacks[11]),
    ('set_header_by_name', cef_response_t._callbacks[12]),
    ('get_header_map', cef_response_t._callbacks[13]),
    ('set_header_map', cef_response_t._callbacks[14]),
    ('get_url', cef_response_t._callbacks[15]),
    ('set_url', cef_response_t._callbacks[16]),
)


cef_cookie_access_filter_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_cookie_t)),
    CFUNCTYPE(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_cookie_t)),
)
cef_cookie_access_filter_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('can_send_cookie', cef_cookie_access_filter_t._callbacks[0]),
    ('can_save_cookie', cef_cookie_access_filter_t._callbacks[1]),
)


cef_cookie_visitor_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_cookie_visitor_t), POINTER(cef_cookie_t), c_int, c_int, POINTER(c_int)),
)
cef_cookie_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('visit', cef_cookie_visitor_t._callbacks[0]),
)


cef_set_cookie_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_set_cookie_callback_t), c_int),
)
cef_set_cookie_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_complete', cef_set_cookie_callback_t._callbacks[0]),
)


cef_delete_cookies_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_delete_cookies_callback_t), c_int),
)
cef_delete_cookies_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_complete', cef_delete_cookies_callback_t._callbacks[0]),
)


cef_cookie_manager_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_cookie_visitor_t)),
    CFUNCTYPE(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), c_int, POINTER(cef_cookie_visitor_t)),
    CFUNCTYPE(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), POINTER(cef_cookie_t), POINTER(cef_set_cookie_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_delete_cookies_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_completion_callback_t)),
)
cef_cookie_manager_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('visit_all_cookies', cef_cookie_manager_t._callbacks[0]),
    ('visit_url_cookies', cef_cookie_manager_t._callbacks[1]),
    ('set_cookie', cef_cookie_manager_t._callbacks[2]),
    ('delete_cookies', cef_cookie_manager_t._callbacks[3]),
    ('flush_store', cef_cookie_manager_t._callbacks[4]),
)


cef_file_dialog_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_file_dialog_callback_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_file_dialog_callback_t)),
)
cef_file_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_file_dialog_callback_t._callbacks[0]),
    ('cancel', cef_file_dialog_callback_t._callbacks[1]),
)


cef_dialog_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_dialog_handler_t), POINTER(cef_browser_t), cef_file_dialog_mode_t, POINTER(cef_string_t), POINTER(cef_string_t), cef_string_list_t, POINTER(cef_file_dialog_callback_t)),
)
cef_dialog_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_file_dialog', cef_dialog_handler_t._callbacks[0]),
)


cef_display_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), cef_log_severity_t, POINTER(cef_string_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_size_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), double),
    CFUNCTYPE(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), cef_cursor_handle_t, cef_cursor_type_t, POINTER(cef_cursor_info_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_int, c_int),
)
cef_display_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_address_change', cef_display_handler_t._callbacks[0]),
    ('on_title_change', cef_display_handler_t._callbacks[1]),
    ('on_favicon_urlchange', cef_display_handler_t._callbacks[2]),
    ('on_fullscreen_mode_change', cef_display_handler_t._callbacks[3]),
    ('on_tooltip', cef_display_handler_t._callbacks[4]),
    ('on_status_message', cef_display_handler_t._callbacks[5]),
    ('on_console_message', cef_display_handler_t._callbacks[6]),
    ('on_auto_resize', cef_display_handler_t._callbacks[7]),
    ('on_loading_progress_change', cef_display_handler_t._callbacks[8]),
    ('on_cursor_change', cef_display_handler_t._callbacks[9]),
    ('on_media_access_change', cef_display_handler_t._callbacks[10]),
)


cef_display_t._callbacks = (
    CFUNCTYPE(int64, POINTER(cef_display_t)),
    CFUNCTYPE(float, POINTER(cef_display_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_void, POINTER(cef_display_t), POINTER(cef_point_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_display_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_display_t)),
    CFUNCTYPE(c_int, POINTER(cef_display_t)),
)
cef_display_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_id', cef_display_t._callbacks[0]),
    ('get_device_scale_factor', cef_display_t._callbacks[1]),
    ('convert_point_to_pixels', cef_display_t._callbacks[2]),
    ('convert_point_from_pixels', cef_display_t._callbacks[3]),
    ('get_bounds', cef_display_t._callbacks[4]),
    ('get_work_area', cef_display_t._callbacks[5]),
    ('get_rotation', cef_display_t._callbacks[6]),
)
# print("cef_display_t._callbacks[1]", cef_display_t._callbacks[1])

cef_domdocument_t._callbacks = (
    CFUNCTYPE(cef_dom_document_type_t, POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(c_int, POINTER(cef_domdocument_t)),
    CFUNCTYPE(c_int, POINTER(cef_domdocument_t)),
    CFUNCTYPE(c_int, POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domdocument_t), POINTER(cef_string_t)),
)
cef_domdocument_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_type', cef_domdocument_t._callbacks[0]),
    ('get_document', cef_domdocument_t._callbacks[1]),
    ('get_body', cef_domdocument_t._callbacks[2]),
    ('get_head', cef_domdocument_t._callbacks[3]),
    ('get_title', cef_domdocument_t._callbacks[4]),
    ('get_element_by_id', cef_domdocument_t._callbacks[5]),
    ('get_focused_node', cef_domdocument_t._callbacks[6]),
    ('has_selection', cef_domdocument_t._callbacks[7]),
    ('get_selection_start_offset', cef_domdocument_t._callbacks[8]),
    ('get_selection_end_offset', cef_domdocument_t._callbacks[9]),
    ('get_selection_as_markup', cef_domdocument_t._callbacks[10]),
    ('get_selection_as_text', cef_domdocument_t._callbacks[11]),
    ('get_base_url', cef_domdocument_t._callbacks[12]),
    ('get_complete_url', cef_domdocument_t._callbacks[13]),
)


cef_domnode_t._callbacks = (
    CFUNCTYPE(cef_dom_node_type_t, POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_domnode_t), cef_string_map_t),
    CFUNCTYPE(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_domnode_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_domnode_t)),
)
cef_domnode_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_type', cef_domnode_t._callbacks[0]),
    ('is_text', cef_domnode_t._callbacks[1]),
    ('is_element', cef_domnode_t._callbacks[2]),
    ('is_editable', cef_domnode_t._callbacks[3]),
    ('is_form_control_element', cef_domnode_t._callbacks[4]),
    ('get_form_control_element_type', cef_domnode_t._callbacks[5]),
    ('is_same', cef_domnode_t._callbacks[6]),
    ('get_name', cef_domnode_t._callbacks[7]),
    ('get_value', cef_domnode_t._callbacks[8]),
    ('set_value', cef_domnode_t._callbacks[9]),
    ('get_as_markup', cef_domnode_t._callbacks[10]),
    ('get_document', cef_domnode_t._callbacks[11]),
    ('get_parent', cef_domnode_t._callbacks[12]),
    ('get_previous_sibling', cef_domnode_t._callbacks[13]),
    ('get_next_sibling', cef_domnode_t._callbacks[14]),
    ('has_children', cef_domnode_t._callbacks[15]),
    ('get_first_child', cef_domnode_t._callbacks[16]),
    ('get_last_child', cef_domnode_t._callbacks[17]),
    ('get_element_tag_name', cef_domnode_t._callbacks[18]),
    ('has_element_attributes', cef_domnode_t._callbacks[19]),
    ('has_element_attribute', cef_domnode_t._callbacks[20]),
    ('get_element_attribute', cef_domnode_t._callbacks[21]),
    ('get_element_attributes', cef_domnode_t._callbacks[22]),
    ('set_element_attribute', cef_domnode_t._callbacks[23]),
    ('get_element_inner_text', cef_domnode_t._callbacks[24]),
    ('get_element_bounds', cef_domnode_t._callbacks[25]),
)


cef_domvisitor_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_domvisitor_t), POINTER(cef_domdocument_t)),
)
cef_domvisitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('visit', cef_domvisitor_t._callbacks[0]),
)


cef_download_item_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_download_item_t)),
    CFUNCTYPE(c_int, POINTER(cef_download_item_t)),
    CFUNCTYPE(c_int, POINTER(cef_download_item_t)),
    CFUNCTYPE(c_int, POINTER(cef_download_item_t)),
    CFUNCTYPE(int64, POINTER(cef_download_item_t)),
    CFUNCTYPE(c_int, POINTER(cef_download_item_t)),
    CFUNCTYPE(int64, POINTER(cef_download_item_t)),
    CFUNCTYPE(int64, POINTER(cef_download_item_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_download_item_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
    CFUNCTYPE(uint32, POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_download_item_t)),
)
cef_download_item_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_download_item_t._callbacks[0]),
    ('is_in_progress', cef_download_item_t._callbacks[1]),
    ('is_complete', cef_download_item_t._callbacks[2]),
    ('is_canceled', cef_download_item_t._callbacks[3]),
    ('get_current_speed', cef_download_item_t._callbacks[4]),
    ('get_percent_complete', cef_download_item_t._callbacks[5]),
    ('get_total_bytes', cef_download_item_t._callbacks[6]),
    ('get_received_bytes', cef_download_item_t._callbacks[7]),
    ('get_start_time', cef_download_item_t._callbacks[8]),
    ('get_end_time', cef_download_item_t._callbacks[9]),
    ('get_full_path', cef_download_item_t._callbacks[10]),
    ('get_id', cef_download_item_t._callbacks[11]),
    ('get_url', cef_download_item_t._callbacks[12]),
    ('get_original_url', cef_download_item_t._callbacks[13]),
    ('get_suggested_file_name', cef_download_item_t._callbacks[14]),
    ('get_content_disposition', cef_download_item_t._callbacks[15]),
    ('get_mime_type', cef_download_item_t._callbacks[16]),
)


cef_download_item_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_download_item_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_download_item_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_download_item_callback_t)),
)
cef_download_item_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cancel', cef_download_item_callback_t._callbacks[0]),
    ('pause', cef_download_item_callback_t._callbacks[1]),
    ('resume', cef_download_item_callback_t._callbacks[2]),
)


cef_download_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_string_t), POINTER(cef_before_download_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_download_item_callback_t)),
)
cef_download_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('can_download', cef_download_handler_t._callbacks[0]),
    ('on_before_download', cef_download_handler_t._callbacks[1]),
    ('on_download_updated', cef_download_handler_t._callbacks[2]),
)


cef_drag_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), cef_drag_operations_mask_t),
    CFUNCTYPE(c_void, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), size_t, POINTER(cef_draggable_region_t)),
)
cef_drag_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_drag_enter', cef_drag_handler_t._callbacks[0]),
    ('on_draggable_regions_changed', cef_drag_handler_t._callbacks[1]),
)


cef_end_tracing_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_end_tracing_callback_t), POINTER(cef_string_t)),
)
cef_end_tracing_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_end_tracing_complete', cef_end_tracing_callback_t._callbacks[0]),
)


cef_extension_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_t)),
    CFUNCTYPE(c_int, POINTER(cef_extension_t), POINTER(cef_extension_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_t)),
    CFUNCTYPE(c_int, POINTER(cef_extension_t)),
    CFUNCTYPE(c_void, POINTER(cef_extension_t)),
)
cef_extension_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_identifier', cef_extension_t._callbacks[0]),
    ('get_path', cef_extension_t._callbacks[1]),
    ('get_manifest', cef_extension_t._callbacks[2]),
    ('is_same', cef_extension_t._callbacks[3]),
    ('get_handler', cef_extension_t._callbacks[4]),
    ('get_loader_context', cef_extension_t._callbacks[5]),
    ('is_loaded', cef_extension_t._callbacks[6]),
    ('unload', cef_extension_t._callbacks[7]),
)


cef_get_extension_resource_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_get_extension_resource_callback_t), POINTER(cef_stream_reader_t)),
    CFUNCTYPE(c_void, POINTER(cef_get_extension_resource_callback_t)),
)
cef_get_extension_resource_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_get_extension_resource_callback_t._callbacks[0]),
    ('cancel', cef_get_extension_resource_callback_t._callbacks[1]),
)


cef_extension_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_extension_handler_t), cef_errorcode_t),
    CFUNCTYPE(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t)),
    CFUNCTYPE(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t)),
    CFUNCTYPE(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_string_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t)),
    CFUNCTYPE(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int, POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_get_extension_resource_callback_t)),
)
cef_extension_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_extension_load_failed', cef_extension_handler_t._callbacks[0]),
    ('on_extension_loaded', cef_extension_handler_t._callbacks[1]),
    ('on_extension_unloaded', cef_extension_handler_t._callbacks[2]),
    ('on_before_background_browser', cef_extension_handler_t._callbacks[3]),
    ('on_before_browser', cef_extension_handler_t._callbacks[4]),
    ('get_active_browser', cef_extension_handler_t._callbacks[5]),
    ('can_access_browser', cef_extension_handler_t._callbacks[6]),
    ('get_extension_resource', cef_extension_handler_t._callbacks[7]),
)


cef_fill_layout_t._callbacks = (
)
cef_fill_layout_t._fields_ = (
    ('_base', cef_layout_t),
)


cef_find_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_find_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(cef_rect_t), c_int, c_int),
)
cef_find_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_find_result', cef_find_handler_t._callbacks[0]),
)


cef_focus_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), cef_focus_source_t),
    CFUNCTYPE(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t)),
)
cef_focus_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_take_focus', cef_focus_handler_t._callbacks[0]),
    ('on_set_focus', cef_focus_handler_t._callbacks[1]),
    ('on_got_focus', cef_focus_handler_t._callbacks[2]),
)


cef_frame_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t)),
    CFUNCTYPE(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_frame_t)),
)
cef_frame_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_frame_created', cef_frame_handler_t._callbacks[0]),
    ('on_frame_attached', cef_frame_handler_t._callbacks[1]),
    ('on_frame_detached', cef_frame_handler_t._callbacks[2]),
    ('on_main_frame_changed', cef_frame_handler_t._callbacks[3]),
)


cef_image_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_image_t)),
    CFUNCTYPE(c_int, POINTER(cef_image_t), POINTER(cef_image_t)),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float, c_int, c_int, cef_color_type_t, cef_alpha_type_t, POINTER(c_void), size_t),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float, POINTER(c_void), size_t),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float, POINTER(c_void), size_t),
    CFUNCTYPE(size_t, POINTER(cef_image_t)),
    CFUNCTYPE(size_t, POINTER(cef_image_t)),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float),
    CFUNCTYPE(c_int, POINTER(cef_image_t), float, POINTER(float), POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_image_t), float, cef_color_type_t, cef_alpha_type_t, POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_image_t), float, c_int, POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_image_t), float, c_int, POINTER(c_int), POINTER(c_int)),
)
cef_image_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_empty', cef_image_t._callbacks[0]),
    ('is_same', cef_image_t._callbacks[1]),
    ('add_bitmap', cef_image_t._callbacks[2]),
    ('add_png', cef_image_t._callbacks[3]),
    ('add_jpeg', cef_image_t._callbacks[4]),
    ('get_width', cef_image_t._callbacks[5]),
    ('get_height', cef_image_t._callbacks[6]),
    ('has_representation', cef_image_t._callbacks[7]),
    ('remove_representation', cef_image_t._callbacks[8]),
    ('get_representation_info', cef_image_t._callbacks[9]),
    ('get_as_bitmap', cef_image_t._callbacks[10]),
    ('get_as_png', cef_image_t._callbacks[11]),
    ('get_as_jpeg', cef_image_t._callbacks[12]),
)


cef_jsdialog_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_jsdialog_callback_t), c_int, POINTER(cef_string_t)),
)
cef_jsdialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_jsdialog_callback_t._callbacks[0]),
)


cef_jsdialog_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), cef_jsdialog_type_t, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_jsdialog_callback_t), POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_jsdialog_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t)),
)
cef_jsdialog_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_jsdialog', cef_jsdialog_handler_t._callbacks[0]),
    ('on_before_unload_dialog', cef_jsdialog_handler_t._callbacks[1]),
    ('on_reset_dialog_state', cef_jsdialog_handler_t._callbacks[2]),
    ('on_dialog_closed', cef_jsdialog_handler_t._callbacks[3]),
)


cef_keyboard_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), cef_event_handle_t, POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), cef_event_handle_t),
)
cef_keyboard_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_pre_key_event', cef_keyboard_handler_t._callbacks[0]),
    ('on_key_event', cef_keyboard_handler_t._callbacks[1]),
)


cef_label_button_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_label_button_t)),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_label_button_t)),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), cef_button_state_t, POINTER(cef_image_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_label_button_t), cef_button_state_t),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), cef_button_state_t, cef_color_t),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), cef_color_t),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), cef_horizontal_alignment_t),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), POINTER(cef_size_t)),
    CFUNCTYPE(c_void, POINTER(cef_label_button_t), POINTER(cef_size_t)),
)
cef_label_button_t._fields_ = (
    ('_base', cef_button_t),
    ('as_menu_button', cef_label_button_t._callbacks[0]),
    ('set_text', cef_label_button_t._callbacks[1]),
    ('get_text', cef_label_button_t._callbacks[2]),
    ('set_image', cef_label_button_t._callbacks[3]),
    ('get_image', cef_label_button_t._callbacks[4]),
    ('set_text_color', cef_label_button_t._callbacks[5]),
    ('set_enabled_text_colors', cef_label_button_t._callbacks[6]),
    ('set_font_list', cef_label_button_t._callbacks[7]),
    ('set_horizontal_alignment', cef_label_button_t._callbacks[8]),
    ('set_minimum_size', cef_label_button_t._callbacks[9]),
    ('set_maximum_size', cef_label_button_t._callbacks[10]),
)


cef_life_span_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_string_t), cef_window_open_disposition_t, c_int, POINTER(cef_popup_features_t), POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t), POINTER(POINTER(cef_dictionary_value_t)), POINTER(c_int)),
    CFUNCTYPE(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t)),
)
cef_life_span_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_before_popup', cef_life_span_handler_t._callbacks[0]),
    ('on_after_created', cef_life_span_handler_t._callbacks[1]),
    ('do_close', cef_life_span_handler_t._callbacks[2]),
    ('on_before_close', cef_life_span_handler_t._callbacks[3]),
)


cef_list_value_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), POINTER(cef_list_value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(size_t, POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(cef_value_type_t, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(double, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, POINTER(cef_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, c_int),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, c_int),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, double),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, POINTER(cef_binary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_int, POINTER(cef_list_value_t), size_t, POINTER(cef_list_value_t)),
)
cef_list_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_list_value_t._callbacks[0]),
    ('is_owned', cef_list_value_t._callbacks[1]),
    ('is_read_only', cef_list_value_t._callbacks[2]),
    ('is_same', cef_list_value_t._callbacks[3]),
    ('is_equal', cef_list_value_t._callbacks[4]),
    ('copy', cef_list_value_t._callbacks[5]),
    ('set_size', cef_list_value_t._callbacks[6]),
    ('get_size', cef_list_value_t._callbacks[7]),
    ('clear', cef_list_value_t._callbacks[8]),
    ('remove', cef_list_value_t._callbacks[9]),
    ('get_type', cef_list_value_t._callbacks[10]),
    ('get_value', cef_list_value_t._callbacks[11]),
    ('get_bool', cef_list_value_t._callbacks[12]),
    ('get_int', cef_list_value_t._callbacks[13]),
    ('get_double', cef_list_value_t._callbacks[14]),
    ('get_string', cef_list_value_t._callbacks[15]),
    ('get_binary', cef_list_value_t._callbacks[16]),
    ('get_dictionary', cef_list_value_t._callbacks[17]),
    ('get_list', cef_list_value_t._callbacks[18]),
    ('set_value', cef_list_value_t._callbacks[19]),
    ('set_null', cef_list_value_t._callbacks[20]),
    ('set_bool', cef_list_value_t._callbacks[21]),
    ('set_int', cef_list_value_t._callbacks[22]),
    ('set_double', cef_list_value_t._callbacks[23]),
    ('set_string', cef_list_value_t._callbacks[24]),
    ('set_binary', cef_list_value_t._callbacks[25]),
    ('set_dictionary', cef_list_value_t._callbacks[26]),
    ('set_list', cef_list_value_t._callbacks[27]),
)


cef_load_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), c_int, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), cef_transition_type_t),
    CFUNCTYPE(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), cef_errorcode_t, POINTER(cef_string_t), POINTER(cef_string_t)),
)
cef_load_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_loading_state_change', cef_load_handler_t._callbacks[0]),
    ('on_load_start', cef_load_handler_t._callbacks[1]),
    ('on_load_end', cef_load_handler_t._callbacks[2]),
    ('on_load_error', cef_load_handler_t._callbacks[3]),
)


cef_media_access_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_media_access_callback_t), uint32),
    CFUNCTYPE(c_void, POINTER(cef_media_access_callback_t)),
)
cef_media_access_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_media_access_callback_t._callbacks[0]),
    ('cancel', cef_media_access_callback_t._callbacks[1]),
)


cef_media_route_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_route_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_route_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_route_t)),
    CFUNCTYPE(c_void, POINTER(cef_media_route_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_media_route_t)),
)
cef_media_route_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_id', cef_media_route_t._callbacks[0]),
    ('get_source', cef_media_route_t._callbacks[1]),
    ('get_sink', cef_media_route_t._callbacks[2]),
    ('send_route_message', cef_media_route_t._callbacks[3]),
    ('terminate', cef_media_route_t._callbacks[4]),
)


cef_media_observer_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_media_observer_t), size_t, POINTER(POINTER(cef_media_sink_t))),
    CFUNCTYPE(c_void, POINTER(cef_media_observer_t), size_t, POINTER(POINTER(cef_media_route_t))),
    CFUNCTYPE(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), cef_media_route_connection_state_t),
    CFUNCTYPE(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), POINTER(c_void), size_t),
)
cef_media_observer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_sinks', cef_media_observer_t._callbacks[0]),
    ('on_routes', cef_media_observer_t._callbacks[1]),
    ('on_route_state_changed', cef_media_observer_t._callbacks[2]),
    ('on_route_message_received', cef_media_observer_t._callbacks[3]),
)


cef_media_route_create_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_media_route_create_callback_t), cef_media_route_create_result_t, POINTER(cef_string_t), POINTER(cef_media_route_t)),
)
cef_media_route_create_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_media_route_create_finished', cef_media_route_create_callback_t._callbacks[0]),
)


cef_media_source_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_source_t)),
    CFUNCTYPE(c_int, POINTER(cef_media_source_t)),
    CFUNCTYPE(c_int, POINTER(cef_media_source_t)),
)
cef_media_source_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_id', cef_media_source_t._callbacks[0]),
    ('is_cast_source', cef_media_source_t._callbacks[1]),
    ('is_dial_source', cef_media_source_t._callbacks[2]),
)


cef_media_sink_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_sink_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_sink_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_sink_t)),
    CFUNCTYPE(cef_media_sink_icon_type_t, POINTER(cef_media_sink_t)),
    CFUNCTYPE(c_void, POINTER(cef_media_sink_t), POINTER(cef_media_sink_device_info_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_media_sink_t)),
    CFUNCTYPE(c_int, POINTER(cef_media_sink_t)),
    CFUNCTYPE(c_int, POINTER(cef_media_sink_t), POINTER(cef_media_source_t)),
)
cef_media_sink_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_id', cef_media_sink_t._callbacks[0]),
    ('get_name', cef_media_sink_t._callbacks[1]),
    ('get_description', cef_media_sink_t._callbacks[2]),
    ('get_icon_type', cef_media_sink_t._callbacks[3]),
    ('get_device_info', cef_media_sink_t._callbacks[4]),
    ('is_cast_sink', cef_media_sink_t._callbacks[5]),
    ('is_dial_sink', cef_media_sink_t._callbacks[6]),
    ('is_compatible_with', cef_media_sink_t._callbacks[7]),
)


cef_media_router_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_router_t), POINTER(cef_media_observer_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_media_router_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_media_router_t)),
    CFUNCTYPE(c_void, POINTER(cef_media_router_t), POINTER(cef_media_source_t), POINTER(cef_media_sink_t), POINTER(cef_media_route_create_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_media_router_t)),
)
cef_media_router_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('add_observer', cef_media_router_t._callbacks[0]),
    ('get_source', cef_media_router_t._callbacks[1]),
    ('notify_current_sinks', cef_media_router_t._callbacks[2]),
    ('create_route', cef_media_router_t._callbacks[3]),
    ('notify_current_routes', cef_media_router_t._callbacks[4]),
)


cef_media_sink_device_info_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_media_sink_device_info_callback_t), POINTER(cef_media_sink_device_info_t)),
)
cef_media_sink_device_info_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_media_sink_device_info', cef_media_sink_device_info_callback_t._callbacks[0]),
)


cef_menu_button_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_menu_button_t), POINTER(cef_menu_model_t), POINTER(cef_point_t), cef_menu_anchor_position_t),
    CFUNCTYPE(c_void, POINTER(cef_menu_button_t)),
)
cef_menu_button_t._fields_ = (
    ('_base', cef_label_button_t),
    ('show_menu', cef_menu_button_t._callbacks[0]),
    ('trigger_menu', cef_menu_button_t._callbacks[1]),
)


cef_menu_button_pressed_lock_t._callbacks = (
)
cef_menu_button_pressed_lock_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
)


cef_menu_button_delegate_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_menu_button_delegate_t), POINTER(cef_menu_button_t), POINTER(cef_point_t), POINTER(cef_menu_button_pressed_lock_t)),
)
cef_menu_button_delegate_t._fields_ = (
    ('_base', cef_button_delegate_t),
    ('on_menu_button_pressed', cef_menu_button_delegate_t._callbacks[0]),
)


cef_menu_model_delegate_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int, cef_event_flags_t),
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_point_t)),
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t)),
    CFUNCTYPE(c_int, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_string_t)),
)
cef_menu_model_delegate_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('execute_command', cef_menu_model_delegate_t._callbacks[0]),
    ('mouse_outside_menu', cef_menu_model_delegate_t._callbacks[1]),
    ('unhandled_open_submenu', cef_menu_model_delegate_t._callbacks[2]),
    ('unhandled_close_submenu', cef_menu_model_delegate_t._callbacks[3]),
    ('menu_will_show', cef_menu_model_delegate_t._callbacks[4]),
    ('menu_closed', cef_menu_model_delegate_t._callbacks[5]),
    ('format_label', cef_menu_model_delegate_t._callbacks[6]),
)


cef_navigation_entry_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(cef_transition_type_t, POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(c_int, POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(c_int, POINTER(cef_navigation_entry_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_navigation_entry_t)),
)
cef_navigation_entry_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_navigation_entry_t._callbacks[0]),
    ('get_url', cef_navigation_entry_t._callbacks[1]),
    ('get_display_url', cef_navigation_entry_t._callbacks[2]),
    ('get_original_url', cef_navigation_entry_t._callbacks[3]),
    ('get_title', cef_navigation_entry_t._callbacks[4]),
    ('get_transition_type', cef_navigation_entry_t._callbacks[5]),
    ('has_post_data', cef_navigation_entry_t._callbacks[6]),
    ('get_completion_time', cef_navigation_entry_t._callbacks[7]),
    ('get_http_status_code', cef_navigation_entry_t._callbacks[8]),
    ('get_sslstatus', cef_navigation_entry_t._callbacks[9]),
)


cef_overlay_controller_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_int, POINTER(cef_overlay_controller_t), POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(cef_docking_mode_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t), POINTER(cef_rect_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t), POINTER(cef_size_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t), POINTER(cef_point_t)),
    CFUNCTYPE(cef_point_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t), POINTER(cef_insets_t)),
    CFUNCTYPE(cef_insets_t, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_void, POINTER(cef_overlay_controller_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_overlay_controller_t)),
    CFUNCTYPE(c_int, POINTER(cef_overlay_controller_t)),
)
cef_overlay_controller_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_overlay_controller_t._callbacks[0]),
    ('is_same', cef_overlay_controller_t._callbacks[1]),
    ('get_contents_view', cef_overlay_controller_t._callbacks[2]),
    ('get_window', cef_overlay_controller_t._callbacks[3]),
    ('get_docking_mode', cef_overlay_controller_t._callbacks[4]),
    ('destroy', cef_overlay_controller_t._callbacks[5]),
    ('set_bounds', cef_overlay_controller_t._callbacks[6]),
    ('get_bounds', cef_overlay_controller_t._callbacks[7]),
    ('get_bounds_in_screen', cef_overlay_controller_t._callbacks[8]),
    ('set_size', cef_overlay_controller_t._callbacks[9]),
    ('get_size', cef_overlay_controller_t._callbacks[10]),
    ('set_position', cef_overlay_controller_t._callbacks[11]),
    ('get_position', cef_overlay_controller_t._callbacks[12]),
    ('set_insets', cef_overlay_controller_t._callbacks[13]),
    ('get_insets', cef_overlay_controller_t._callbacks[14]),
    ('size_to_preferred_size', cef_overlay_controller_t._callbacks[15]),
    ('set_visible', cef_overlay_controller_t._callbacks[16]),
    ('is_visible', cef_overlay_controller_t._callbacks[17]),
    ('is_drawn', cef_overlay_controller_t._callbacks[18]),
)


cef_panel_delegate_t._callbacks = (
)
cef_panel_delegate_t._fields_ = (
    ('_base', cef_view_delegate_t),
)


cef_panel_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_panel_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_panel_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_panel_t), POINTER(cef_box_layout_settings_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_panel_t)),
    CFUNCTYPE(c_void, POINTER(cef_panel_t)),
    CFUNCTYPE(c_void, POINTER(cef_panel_t), POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_panel_t), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_panel_t), POINTER(cef_view_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_panel_t), POINTER(cef_view_t)),
    CFUNCTYPE(c_void, POINTER(cef_panel_t)),
    CFUNCTYPE(size_t, POINTER(cef_panel_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_panel_t), c_int),
)
cef_panel_t._fields_ = (
    ('_base', cef_view_t),
    ('as_window', cef_panel_t._callbacks[0]),
    ('set_to_fill_layout', cef_panel_t._callbacks[1]),
    ('set_to_box_layout', cef_panel_t._callbacks[2]),
    ('get_layout', cef_panel_t._callbacks[3]),
    ('layout', cef_panel_t._callbacks[4]),
    ('add_child_view', cef_panel_t._callbacks[5]),
    ('add_child_view_at', cef_panel_t._callbacks[6]),
    ('reorder_child_view', cef_panel_t._callbacks[7]),
    ('remove_child_view', cef_panel_t._callbacks[8]),
    ('remove_all_child_views', cef_panel_t._callbacks[9]),
    ('get_child_view_count', cef_panel_t._callbacks[10]),
    ('get_child_view_at', cef_panel_t._callbacks[11]),
)


cef_permission_prompt_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_permission_prompt_callback_t), cef_permission_request_result_t),
)
cef_permission_prompt_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_permission_prompt_callback_t._callbacks[0]),
)


cef_permission_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_permission_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), uint32, POINTER(cef_media_access_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_permission_handler_t), POINTER(cef_browser_t), uint64, POINTER(cef_string_t), uint32, POINTER(cef_permission_prompt_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_permission_handler_t), POINTER(cef_browser_t), uint64, cef_permission_request_result_t),
)
cef_permission_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_request_media_access_permission', cef_permission_handler_t._callbacks[0]),
    ('on_show_permission_prompt', cef_permission_handler_t._callbacks[1]),
    ('on_dismiss_permission_prompt', cef_permission_handler_t._callbacks[2]),
)


cef_post_data_element_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_post_data_element_t)),
    CFUNCTYPE(c_void, POINTER(cef_post_data_element_t)),
    CFUNCTYPE(c_void, POINTER(cef_post_data_element_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_post_data_element_t), size_t, POINTER(c_void)),
    CFUNCTYPE(cef_postdataelement_type_t, POINTER(cef_post_data_element_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_post_data_element_t)),
    CFUNCTYPE(size_t, POINTER(cef_post_data_element_t)),
    CFUNCTYPE(size_t, POINTER(cef_post_data_element_t), size_t, POINTER(c_void)),
)
cef_post_data_element_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_read_only', cef_post_data_element_t._callbacks[0]),
    ('set_to_empty', cef_post_data_element_t._callbacks[1]),
    ('set_to_file', cef_post_data_element_t._callbacks[2]),
    ('set_to_bytes', cef_post_data_element_t._callbacks[3]),
    ('get_type', cef_post_data_element_t._callbacks[4]),
    ('get_file', cef_post_data_element_t._callbacks[5]),
    ('get_bytes_count', cef_post_data_element_t._callbacks[6]),
    ('get_bytes', cef_post_data_element_t._callbacks[7]),
)


cef_post_data_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_post_data_t)),
    CFUNCTYPE(c_int, POINTER(cef_post_data_t)),
    CFUNCTYPE(size_t, POINTER(cef_post_data_t)),
    CFUNCTYPE(c_void, POINTER(cef_post_data_t), POINTER(size_t), POINTER(POINTER(cef_post_data_element_t))),
    CFUNCTYPE(c_int, POINTER(cef_post_data_t), POINTER(cef_post_data_element_t)),
    CFUNCTYPE(c_int, POINTER(cef_post_data_t), POINTER(cef_post_data_element_t)),
    CFUNCTYPE(c_void, POINTER(cef_post_data_t)),
)
cef_post_data_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_read_only', cef_post_data_t._callbacks[0]),
    ('has_excluded_elements', cef_post_data_t._callbacks[1]),
    ('get_element_count', cef_post_data_t._callbacks[2]),
    ('get_elements', cef_post_data_t._callbacks[3]),
    ('remove_element', cef_post_data_t._callbacks[4]),
    ('add_element', cef_post_data_t._callbacks[5]),
    ('remove_elements', cef_post_data_t._callbacks[6]),
)


cef_preference_manager_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_preference_manager_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_preference_manager_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_preference_manager_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_preference_manager_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_preference_manager_t), POINTER(cef_string_t), POINTER(cef_value_t), POINTER(cef_string_t)),
)
cef_preference_manager_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('has_preference', cef_preference_manager_t._callbacks[0]),
    ('get_preference', cef_preference_manager_t._callbacks[1]),
    ('get_all_preferences', cef_preference_manager_t._callbacks[2]),
    ('can_set_preference', cef_preference_manager_t._callbacks[3]),
    ('set_preference', cef_preference_manager_t._callbacks[4]),
)


cef_print_settings_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), POINTER(cef_size_t), POINTER(cef_rect_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), size_t, POINTER(cef_range_t)),
    CFUNCTYPE(size_t, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), POINTER(size_t), POINTER(cef_range_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), cef_color_model_t),
    CFUNCTYPE(cef_color_model_t, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_settings_t), cef_duplex_mode_t),
    CFUNCTYPE(cef_duplex_mode_t, POINTER(cef_print_settings_t)),
)
cef_print_settings_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_print_settings_t._callbacks[0]),
    ('is_read_only', cef_print_settings_t._callbacks[1]),
    ('set_orientation', cef_print_settings_t._callbacks[2]),
    ('is_landscape', cef_print_settings_t._callbacks[3]),
    ('set_printer_printable_area', cef_print_settings_t._callbacks[4]),
    ('set_device_name', cef_print_settings_t._callbacks[5]),
    ('get_device_name', cef_print_settings_t._callbacks[6]),
    ('set_dpi', cef_print_settings_t._callbacks[7]),
    ('get_dpi', cef_print_settings_t._callbacks[8]),
    ('set_page_ranges', cef_print_settings_t._callbacks[9]),
    ('get_page_ranges_count', cef_print_settings_t._callbacks[10]),
    ('get_page_ranges', cef_print_settings_t._callbacks[11]),
    ('set_selection_only', cef_print_settings_t._callbacks[12]),
    ('is_selection_only', cef_print_settings_t._callbacks[13]),
    ('set_collate', cef_print_settings_t._callbacks[14]),
    ('will_collate', cef_print_settings_t._callbacks[15]),
    ('set_color_model', cef_print_settings_t._callbacks[16]),
    ('get_color_model', cef_print_settings_t._callbacks[17]),
    ('set_copies', cef_print_settings_t._callbacks[18]),
    ('get_copies', cef_print_settings_t._callbacks[19]),
    ('set_duplex_mode', cef_print_settings_t._callbacks[20]),
    ('get_duplex_mode', cef_print_settings_t._callbacks[21]),
)


cef_print_dialog_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_print_dialog_callback_t), POINTER(cef_print_settings_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_dialog_callback_t)),
)
cef_print_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_print_dialog_callback_t._callbacks[0]),
    ('cancel', cef_print_dialog_callback_t._callbacks[1]),
)


cef_print_job_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_print_job_callback_t)),
)
cef_print_job_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_print_job_callback_t._callbacks[0]),
)


cef_print_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_print_settings_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_print_dialog_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_print_job_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(cef_size_t, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int),
)
cef_print_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_print_start', cef_print_handler_t._callbacks[0]),
    ('on_print_settings', cef_print_handler_t._callbacks[1]),
    ('on_print_dialog', cef_print_handler_t._callbacks[2]),
    ('on_print_job', cef_print_handler_t._callbacks[3]),
    ('on_print_reset', cef_print_handler_t._callbacks[4]),
    ('get_pdf_paper_size', cef_print_handler_t._callbacks[5]),
)


cef_process_message_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_process_message_t)),
    CFUNCTYPE(c_int, POINTER(cef_process_message_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_process_message_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_process_message_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_process_message_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_process_message_t)),
)
cef_process_message_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_process_message_t._callbacks[0]),
    ('is_read_only', cef_process_message_t._callbacks[1]),
    ('copy', cef_process_message_t._callbacks[2]),
    ('get_name', cef_process_message_t._callbacks[3]),
    ('get_argument_list', cef_process_message_t._callbacks[4]),
    ('get_shared_memory_region', cef_process_message_t._callbacks[5]),
)


cef_read_handler_t._callbacks = (
    CFUNCTYPE(size_t, POINTER(cef_read_handler_t), POINTER(c_void), size_t, size_t),
    CFUNCTYPE(c_int, POINTER(cef_read_handler_t), int64, c_int),
    CFUNCTYPE(int64, POINTER(cef_read_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_read_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_read_handler_t)),
)
cef_read_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('read', cef_read_handler_t._callbacks[0]),
    ('seek', cef_read_handler_t._callbacks[1]),
    ('tell', cef_read_handler_t._callbacks[2]),
    ('eof', cef_read_handler_t._callbacks[3]),
    ('may_block', cef_read_handler_t._callbacks[4]),
)


cef_registration_t._callbacks = (
)
cef_registration_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
)


cef_render_handler_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_render_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t)),
    CFUNCTYPE(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_screen_info_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), cef_paint_element_type_t, size_t, POINTER(cef_rect_t), POINTER(c_void), c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), cef_paint_element_type_t, size_t, POINTER(cef_rect_t), POINTER(c_void)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), cef_horizontal_alignment_t, POINTER(cef_size_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_touch_handle_state_t)),
    CFUNCTYPE(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), cef_drag_operations_mask_t, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), cef_drag_operations_mask_t),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), double, double),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_range_t), size_t, POINTER(cef_rect_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_range_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), cef_text_input_mode_t),
)
cef_render_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_accessibility_handler', cef_render_handler_t._callbacks[0]),
    ('get_root_screen_rect', cef_render_handler_t._callbacks[1]),
    ('get_view_rect', cef_render_handler_t._callbacks[2]),
    ('get_screen_point', cef_render_handler_t._callbacks[3]),
    ('get_screen_info', cef_render_handler_t._callbacks[4]),
    ('on_popup_show', cef_render_handler_t._callbacks[5]),
    ('on_popup_size', cef_render_handler_t._callbacks[6]),
    ('on_paint', cef_render_handler_t._callbacks[7]),
    ('on_accelerated_paint', cef_render_handler_t._callbacks[8]),
    ('get_touch_handle_size', cef_render_handler_t._callbacks[9]),
    ('on_touch_handle_state_changed', cef_render_handler_t._callbacks[10]),
    ('start_dragging', cef_render_handler_t._callbacks[11]),
    ('update_drag_cursor', cef_render_handler_t._callbacks[12]),
    ('on_scroll_offset_changed', cef_render_handler_t._callbacks[13]),
    ('on_ime_composition_range_changed', cef_render_handler_t._callbacks[14]),
    ('on_text_selection_changed', cef_render_handler_t._callbacks[15]),
    ('on_virtual_keyboard_requested', cef_render_handler_t._callbacks[16]),
)


cef_v8context_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8context_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8context_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8context_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8context_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8context_t), POINTER(cef_v8context_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8context_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int, POINTER(POINTER(cef_v8value_t)), POINTER(POINTER(cef_v8exception_t))),
)
cef_v8context_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_task_runner', cef_v8context_t._callbacks[0]),
    ('is_valid', cef_v8context_t._callbacks[1]),
    ('get_browser', cef_v8context_t._callbacks[2]),
    ('get_frame', cef_v8context_t._callbacks[3]),
    ('get_global', cef_v8context_t._callbacks[4]),
    ('enter', cef_v8context_t._callbacks[5]),
    ('exit', cef_v8context_t._callbacks[6]),
    ('is_same', cef_v8context_t._callbacks[7]),
    ('eval', cef_v8context_t._callbacks[8]),
)


cef_v8exception_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8exception_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8exception_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8exception_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8exception_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8exception_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8exception_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8exception_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8exception_t)),
)
cef_v8exception_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_message', cef_v8exception_t._callbacks[0]),
    ('get_source_line', cef_v8exception_t._callbacks[1]),
    ('get_script_resource_name', cef_v8exception_t._callbacks[2]),
    ('get_line_number', cef_v8exception_t._callbacks[3]),
    ('get_start_position', cef_v8exception_t._callbacks[4]),
    ('get_end_position', cef_v8exception_t._callbacks[5]),
    ('get_start_column', cef_v8exception_t._callbacks[6]),
    ('get_end_column', cef_v8exception_t._callbacks[7]),
)


cef_v8stack_trace_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8stack_trace_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8stack_trace_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8stack_trace_t), c_int),
)
cef_v8stack_trace_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_v8stack_trace_t._callbacks[0]),
    ('get_frame_count', cef_v8stack_trace_t._callbacks[1]),
    ('get_frame', cef_v8stack_trace_t._callbacks[2]),
)


cef_render_process_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_dictionary_value_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_render_process_handler_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t), POINTER(cef_v8exception_t), POINTER(cef_v8stack_trace_t)),
    CFUNCTYPE(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_domnode_t)),
    CFUNCTYPE(c_int, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), cef_process_id_t, POINTER(cef_process_message_t)),
)
cef_render_process_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_web_kit_initialized', cef_render_process_handler_t._callbacks[0]),
    ('on_browser_created', cef_render_process_handler_t._callbacks[1]),
    ('on_browser_destroyed', cef_render_process_handler_t._callbacks[2]),
    ('get_load_handler', cef_render_process_handler_t._callbacks[3]),
    ('on_context_created', cef_render_process_handler_t._callbacks[4]),
    ('on_context_released', cef_render_process_handler_t._callbacks[5]),
    ('on_uncaught_exception', cef_render_process_handler_t._callbacks[6]),
    ('on_focused_node_changed', cef_render_process_handler_t._callbacks[7]),
    ('on_process_message_received', cef_render_process_handler_t._callbacks[8]),
)


cef_request_context_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), POINTER(cef_request_context_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), POINTER(cef_request_context_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_t), POINTER(cef_completion_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_scheme_handler_factory_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_resolve_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_dictionary_value_t), POINTER(cef_extension_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_context_t), cef_string_list_t),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_t), POINTER(cef_completion_callback_t)),
)
cef_request_context_t._fields_ = (
    ('_base', cef_preference_manager_t),
    ('is_same', cef_request_context_t._callbacks[0]),
    ('is_sharing_with', cef_request_context_t._callbacks[1]),
    ('is_global', cef_request_context_t._callbacks[2]),
    ('get_handler', cef_request_context_t._callbacks[3]),
    ('get_cache_path', cef_request_context_t._callbacks[4]),
    ('get_cookie_manager', cef_request_context_t._callbacks[5]),
    ('register_scheme_handler_factory', cef_request_context_t._callbacks[6]),
    ('clear_scheme_handler_factories', cef_request_context_t._callbacks[7]),
    ('clear_certificate_exceptions', cef_request_context_t._callbacks[8]),
    ('clear_http_auth_credentials', cef_request_context_t._callbacks[9]),
    ('close_all_connections', cef_request_context_t._callbacks[10]),
    ('resolve_host', cef_request_context_t._callbacks[11]),
    ('load_extension', cef_request_context_t._callbacks[12]),
    ('did_load_extension', cef_request_context_t._callbacks[13]),
    ('has_extension', cef_request_context_t._callbacks[14]),
    ('get_extensions', cef_request_context_t._callbacks[15]),
    ('get_extension', cef_request_context_t._callbacks[16]),
    ('get_media_router', cef_request_context_t._callbacks[17]),
)


cef_request_context_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_request_context_handler_t), POINTER(cef_request_context_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_context_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int)),
)
cef_request_context_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_request_context_initialized', cef_request_context_handler_t._callbacks[0]),
    ('get_resource_request_handler', cef_request_context_handler_t._callbacks[1]),
)


cef_sslinfo_t._callbacks = (
    CFUNCTYPE(cef_cert_status_t, POINTER(cef_sslinfo_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_sslinfo_t)),
)
cef_sslinfo_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_cert_status', cef_sslinfo_t._callbacks[0]),
    ('get_x509certificate', cef_sslinfo_t._callbacks[1]),
)


cef_select_client_certificate_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_select_client_certificate_callback_t), POINTER(cef_x509certificate_t)),
)
cef_select_client_certificate_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('select', cef_select_client_certificate_callback_t._callbacks[0]),
)


cef_request_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int),
    CFUNCTYPE(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), cef_window_open_disposition_t, c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int)),
    CFUNCTYPE(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), cef_errorcode_t, POINTER(cef_string_t), POINTER(cef_sslinfo_t), POINTER(cef_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, size_t, POINTER(POINTER(cef_x509certificate_t)), POINTER(cef_select_client_certificate_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t)),
    CFUNCTYPE(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t), cef_termination_status_t),
    CFUNCTYPE(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t)),
)
cef_request_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_before_browse', cef_request_handler_t._callbacks[0]),
    ('on_open_urlfrom_tab', cef_request_handler_t._callbacks[1]),
    ('get_resource_request_handler', cef_request_handler_t._callbacks[2]),
    ('get_auth_credentials', cef_request_handler_t._callbacks[3]),
    ('on_certificate_error', cef_request_handler_t._callbacks[4]),
    ('on_select_client_certificate', cef_request_handler_t._callbacks[5]),
    ('on_render_view_ready', cef_request_handler_t._callbacks[6]),
    ('on_render_process_terminated', cef_request_handler_t._callbacks[7]),
    ('on_document_available_in_main_frame', cef_request_handler_t._callbacks[8]),
)


cef_resolve_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_resolve_callback_t), cef_errorcode_t, cef_string_list_t),
)
cef_resolve_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_resolve_completed', cef_resolve_callback_t._callbacks[0]),
)


cef_resource_bundle_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(POINTER(c_void)), POINTER(size_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_bundle_handler_t), c_int, cef_scale_factor_t, POINTER(POINTER(c_void)), POINTER(size_t)),
)
cef_resource_bundle_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_localized_string', cef_resource_bundle_handler_t._callbacks[0]),
    ('get_data_resource', cef_resource_bundle_handler_t._callbacks[1]),
    ('get_data_resource_for_scale', cef_resource_bundle_handler_t._callbacks[2]),
)


cef_resource_bundle_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_bundle_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_bundle_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_bundle_t), c_int, cef_scale_factor_t),
)
cef_resource_bundle_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_localized_string', cef_resource_bundle_t._callbacks[0]),
    ('get_data_resource', cef_resource_bundle_t._callbacks[1]),
    ('get_data_resource_for_scale', cef_resource_bundle_t._callbacks[2]),
)


cef_resource_skip_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_resource_skip_callback_t), int64),
)
cef_resource_skip_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_resource_skip_callback_t._callbacks[0]),
)


cef_resource_read_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_resource_read_callback_t), c_int),
)
cef_resource_read_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('cont', cef_resource_read_callback_t._callbacks[0]),
)


cef_resource_handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(c_int), POINTER(cef_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(cef_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_resource_handler_t), POINTER(cef_response_t), POINTER(int64), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_handler_t), int64, POINTER(int64), POINTER(cef_resource_skip_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_handler_t), POINTER(c_void), c_int, POINTER(c_int), POINTER(cef_resource_read_callback_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_handler_t), POINTER(c_void), c_int, POINTER(c_int), POINTER(cef_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_resource_handler_t)),
)
cef_resource_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('open', cef_resource_handler_t._callbacks[0]),
    ('process_request', cef_resource_handler_t._callbacks[1]),
    ('get_response_headers', cef_resource_handler_t._callbacks[2]),
    ('skip', cef_resource_handler_t._callbacks[3]),
    ('read', cef_resource_handler_t._callbacks[4]),
    ('read_response', cef_resource_handler_t._callbacks[5]),
    ('cancel', cef_resource_handler_t._callbacks[6]),
)


cef_resource_request_handler_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t)),
    CFUNCTYPE(cef_return_value_t, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_callback_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t)),
    CFUNCTYPE(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), cef_urlrequest_status_t, int64),
    CFUNCTYPE(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(c_int)),
)
cef_resource_request_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_cookie_access_filter', cef_resource_request_handler_t._callbacks[0]),
    ('on_before_resource_load', cef_resource_request_handler_t._callbacks[1]),
    ('get_resource_handler', cef_resource_request_handler_t._callbacks[2]),
    ('on_resource_redirect', cef_resource_request_handler_t._callbacks[3]),
    ('on_resource_response', cef_resource_request_handler_t._callbacks[4]),
    ('get_resource_response_filter', cef_resource_request_handler_t._callbacks[5]),
    ('on_resource_load_complete', cef_resource_request_handler_t._callbacks[6]),
    ('on_protocol_execution', cef_resource_request_handler_t._callbacks[7]),
)


cef_response_filter_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_response_filter_t)),
    CFUNCTYPE(cef_response_filter_status_t, POINTER(cef_response_filter_t), POINTER(c_void), size_t, POINTER(size_t), POINTER(c_void), size_t, POINTER(size_t)),
)
cef_response_filter_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('init_filter', cef_response_filter_t._callbacks[0]),
    ('filter', cef_response_filter_t._callbacks[1]),
)


cef_scheme_handler_factory_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_scheme_handler_factory_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_request_t)),
)
cef_scheme_handler_factory_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('create', cef_scheme_handler_factory_t._callbacks[0]),
)


cef_scroll_view_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_scroll_view_t), POINTER(cef_view_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_scroll_view_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_scroll_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_scroll_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_scroll_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_scroll_view_t)),
    CFUNCTYPE(c_int, POINTER(cef_scroll_view_t)),
)
cef_scroll_view_t._fields_ = (
    ('_base', cef_view_t),
    ('set_content_view', cef_scroll_view_t._callbacks[0]),
    ('get_content_view', cef_scroll_view_t._callbacks[1]),
    ('get_visible_content_rect', cef_scroll_view_t._callbacks[2]),
    ('has_horizontal_scrollbar', cef_scroll_view_t._callbacks[3]),
    ('get_horizontal_scrollbar_height', cef_scroll_view_t._callbacks[4]),
    ('has_vertical_scrollbar', cef_scroll_view_t._callbacks[5]),
    ('get_vertical_scrollbar_width', cef_scroll_view_t._callbacks[6]),
)


cef_server_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_server_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_t)),
    CFUNCTYPE(c_int, POINTER(cef_server_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_server_t)),
    CFUNCTYPE(c_int, POINTER(cef_server_t)),
    CFUNCTYPE(c_int, POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int, POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int, c_int, POINTER(cef_string_t), int64, cef_string_multimap_t),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int, POINTER(c_void), size_t),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_t), c_int, POINTER(c_void), size_t),
)
cef_server_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_task_runner', cef_server_t._callbacks[0]),
    ('shutdown', cef_server_t._callbacks[1]),
    ('is_running', cef_server_t._callbacks[2]),
    ('get_address', cef_server_t._callbacks[3]),
    ('has_connection', cef_server_t._callbacks[4]),
    ('is_valid_connection', cef_server_t._callbacks[5]),
    ('send_http200response', cef_server_t._callbacks[6]),
    ('send_http404response', cef_server_t._callbacks[7]),
    ('send_http500response', cef_server_t._callbacks[8]),
    ('send_http_response', cef_server_t._callbacks[9]),
    ('send_raw_data', cef_server_t._callbacks[10]),
    ('close_connection', cef_server_t._callbacks[11]),
    ('send_web_socket_message', cef_server_t._callbacks[12]),
)


cef_server_handler_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t), POINTER(cef_callback_t)),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(c_void), size_t),
)
cef_server_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_server_created', cef_server_handler_t._callbacks[0]),
    ('on_server_destroyed', cef_server_handler_t._callbacks[1]),
    ('on_client_connected', cef_server_handler_t._callbacks[2]),
    ('on_client_disconnected', cef_server_handler_t._callbacks[3]),
    ('on_http_request', cef_server_handler_t._callbacks[4]),
    ('on_web_socket_request', cef_server_handler_t._callbacks[5]),
    ('on_web_socket_connected', cef_server_handler_t._callbacks[6]),
    ('on_web_socket_message', cef_server_handler_t._callbacks[7]),
)


cef_shared_memory_region_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_shared_memory_region_t)),
    CFUNCTYPE(size_t, POINTER(cef_shared_memory_region_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_shared_memory_region_t)),
)
cef_shared_memory_region_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_shared_memory_region_t._callbacks[0]),
    ('size', cef_shared_memory_region_t._callbacks[1]),
    ('memory', cef_shared_memory_region_t._callbacks[2]),
)


cef_shared_process_message_builder_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_shared_process_message_builder_t)),
    CFUNCTYPE(size_t, POINTER(cef_shared_process_message_builder_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_shared_process_message_builder_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_shared_process_message_builder_t)),
)
cef_shared_process_message_builder_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_shared_process_message_builder_t._callbacks[0]),
    ('size', cef_shared_process_message_builder_t._callbacks[1]),
    ('memory', cef_shared_process_message_builder_t._callbacks[2]),
    ('build', cef_shared_process_message_builder_t._callbacks[3]),
)


cef_sslstatus_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_sslstatus_t)),
    CFUNCTYPE(cef_cert_status_t, POINTER(cef_sslstatus_t)),
    CFUNCTYPE(cef_ssl_version_t, POINTER(cef_sslstatus_t)),
    CFUNCTYPE(cef_ssl_content_status_t, POINTER(cef_sslstatus_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_sslstatus_t)),
)
cef_sslstatus_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_secure_connection', cef_sslstatus_t._callbacks[0]),
    ('get_cert_status', cef_sslstatus_t._callbacks[1]),
    ('get_sslversion', cef_sslstatus_t._callbacks[2]),
    ('get_content_status', cef_sslstatus_t._callbacks[3]),
    ('get_x509certificate', cef_sslstatus_t._callbacks[4]),
)


cef_stream_reader_t._callbacks = (
    CFUNCTYPE(size_t, POINTER(cef_stream_reader_t), POINTER(c_void), size_t, size_t),
    CFUNCTYPE(c_int, POINTER(cef_stream_reader_t), int64, c_int),
    CFUNCTYPE(int64, POINTER(cef_stream_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_stream_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_stream_reader_t)),
)
cef_stream_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('read', cef_stream_reader_t._callbacks[0]),
    ('seek', cef_stream_reader_t._callbacks[1]),
    ('tell', cef_stream_reader_t._callbacks[2]),
    ('eof', cef_stream_reader_t._callbacks[3]),
    ('may_block', cef_stream_reader_t._callbacks[4]),
)


cef_stream_writer_t._callbacks = (
    CFUNCTYPE(size_t, POINTER(cef_stream_writer_t), POINTER(c_void), size_t, size_t),
    CFUNCTYPE(c_int, POINTER(cef_stream_writer_t), int64, c_int),
    CFUNCTYPE(int64, POINTER(cef_stream_writer_t)),
    CFUNCTYPE(c_int, POINTER(cef_stream_writer_t)),
    CFUNCTYPE(c_int, POINTER(cef_stream_writer_t)),
)
cef_stream_writer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('write', cef_stream_writer_t._callbacks[0]),
    ('seek', cef_stream_writer_t._callbacks[1]),
    ('tell', cef_stream_writer_t._callbacks[2]),
    ('flush', cef_stream_writer_t._callbacks[3]),
    ('may_block', cef_stream_writer_t._callbacks[4]),
)


cef_string_visitor_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_string_visitor_t), POINTER(cef_string_t)),
)
cef_string_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('visit', cef_string_visitor_t._callbacks[0]),
)


cef_task_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_task_t)),
)
cef_task_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('execute', cef_task_t._callbacks[0]),
)


cef_task_runner_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_runner_t)),
    CFUNCTYPE(c_int, POINTER(cef_task_runner_t)),
    CFUNCTYPE(c_int, POINTER(cef_task_runner_t), cef_thread_id_t),
    CFUNCTYPE(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_t)),
    CFUNCTYPE(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_t), int64),
)
cef_task_runner_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_same', cef_task_runner_t._callbacks[0]),
    ('belongs_to_current_thread', cef_task_runner_t._callbacks[1]),
    ('belongs_to_thread', cef_task_runner_t._callbacks[2]),
    ('post_task', cef_task_runner_t._callbacks[3]),
    ('post_delayed_task', cef_task_runner_t._callbacks[4]),
)


cef_textfield_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_textfield_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_textfield_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t)),
    CFUNCTYPE(cef_range_t, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_range_t)),
    CFUNCTYPE(size_t, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_color_t),
    CFUNCTYPE(cef_color_t, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_color_t),
    CFUNCTYPE(cef_color_t, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_color_t),
    CFUNCTYPE(cef_color_t, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_color_t, POINTER(cef_range_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_text_style_t, c_int, POINTER(cef_range_t)),
    CFUNCTYPE(c_int, POINTER(cef_textfield_t), cef_text_field_commands_t),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_text_field_commands_t),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_textfield_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), cef_color_t),
    CFUNCTYPE(c_void, POINTER(cef_textfield_t), POINTER(cef_string_t)),
)
cef_textfield_t._fields_ = (
    ('_base', cef_view_t),
    ('set_password_input', cef_textfield_t._callbacks[0]),
    ('is_password_input', cef_textfield_t._callbacks[1]),
    ('set_read_only', cef_textfield_t._callbacks[2]),
    ('is_read_only', cef_textfield_t._callbacks[3]),
    ('get_text', cef_textfield_t._callbacks[4]),
    ('set_text', cef_textfield_t._callbacks[5]),
    ('append_text', cef_textfield_t._callbacks[6]),
    ('insert_or_replace_text', cef_textfield_t._callbacks[7]),
    ('has_selection', cef_textfield_t._callbacks[8]),
    ('get_selected_text', cef_textfield_t._callbacks[9]),
    ('select_all', cef_textfield_t._callbacks[10]),
    ('clear_selection', cef_textfield_t._callbacks[11]),
    ('get_selected_range', cef_textfield_t._callbacks[12]),
    ('select_range', cef_textfield_t._callbacks[13]),
    ('get_cursor_position', cef_textfield_t._callbacks[14]),
    ('set_text_color', cef_textfield_t._callbacks[15]),
    ('get_text_color', cef_textfield_t._callbacks[16]),
    ('set_selection_text_color', cef_textfield_t._callbacks[17]),
    ('get_selection_text_color', cef_textfield_t._callbacks[18]),
    ('set_selection_background_color', cef_textfield_t._callbacks[19]),
    ('get_selection_background_color', cef_textfield_t._callbacks[20]),
    ('set_font_list', cef_textfield_t._callbacks[21]),
    ('apply_text_color', cef_textfield_t._callbacks[22]),
    ('apply_text_style', cef_textfield_t._callbacks[23]),
    ('is_command_enabled', cef_textfield_t._callbacks[24]),
    ('execute_command', cef_textfield_t._callbacks[25]),
    ('clear_edit_history', cef_textfield_t._callbacks[26]),
    ('set_placeholder_text', cef_textfield_t._callbacks[27]),
    ('get_placeholder_text', cef_textfield_t._callbacks[28]),
    ('set_placeholder_text_color', cef_textfield_t._callbacks[29]),
    ('set_accessible_name', cef_textfield_t._callbacks[30]),
)


cef_textfield_delegate_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_textfield_delegate_t), POINTER(cef_textfield_t), POINTER(cef_key_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_textfield_delegate_t), POINTER(cef_textfield_t)),
)
cef_textfield_delegate_t._fields_ = (
    ('_base', cef_view_delegate_t),
    ('on_key_event', cef_textfield_delegate_t._callbacks[0]),
    ('on_after_user_action', cef_textfield_delegate_t._callbacks[1]),
)


cef_thread_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_thread_t)),
    CFUNCTYPE(cef_platform_thread_id_t, POINTER(cef_thread_t)),
    CFUNCTYPE(c_void, POINTER(cef_thread_t)),
    CFUNCTYPE(c_int, POINTER(cef_thread_t)),
)
cef_thread_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_task_runner', cef_thread_t._callbacks[0]),
    ('get_platform_thread_id', cef_thread_t._callbacks[1]),
    ('stop', cef_thread_t._callbacks[2]),
    ('is_running', cef_thread_t._callbacks[3]),
)


cef_urlrequest_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_urlrequest_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_urlrequest_t)),
    CFUNCTYPE(cef_urlrequest_status_t, POINTER(cef_urlrequest_t)),
    CFUNCTYPE(cef_errorcode_t, POINTER(cef_urlrequest_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_urlrequest_t)),
    CFUNCTYPE(c_int, POINTER(cef_urlrequest_t)),
    CFUNCTYPE(c_void, POINTER(cef_urlrequest_t)),
)
cef_urlrequest_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_request', cef_urlrequest_t._callbacks[0]),
    ('get_client', cef_urlrequest_t._callbacks[1]),
    ('get_request_status', cef_urlrequest_t._callbacks[2]),
    ('get_request_error', cef_urlrequest_t._callbacks[3]),
    ('get_response', cef_urlrequest_t._callbacks[4]),
    ('response_was_cached', cef_urlrequest_t._callbacks[5]),
    ('cancel', cef_urlrequest_t._callbacks[6]),
)


cef_urlrequest_client_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t)),
    CFUNCTYPE(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), int64, int64),
    CFUNCTYPE(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), int64, int64),
    CFUNCTYPE(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), POINTER(c_void), size_t),
    CFUNCTYPE(c_int, POINTER(cef_urlrequest_client_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t)),
)
cef_urlrequest_client_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('on_request_complete', cef_urlrequest_client_t._callbacks[0]),
    ('on_upload_progress', cef_urlrequest_client_t._callbacks[1]),
    ('on_download_progress', cef_urlrequest_client_t._callbacks[2]),
    ('on_download_data', cef_urlrequest_client_t._callbacks[3]),
    ('get_auth_credentials', cef_urlrequest_client_t._callbacks[4]),
)


cef_v8value_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(int32, POINTER(cef_v8value_t)),
    CFUNCTYPE(uint32, POINTER(cef_v8value_t)),
    CFUNCTYPE(double, POINTER(cef_v8value_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t), POINTER(cef_v8value_t), cef_v8_propertyattribute_t),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t), cef_v8_accesscontrol_t, cef_v8_propertyattribute_t),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), cef_string_list_t),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_base_ref_counted_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t), POINTER(cef_v8value_t), size_t, POINTER(POINTER(cef_v8value_t))),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8value_t), POINTER(cef_v8context_t), POINTER(cef_v8value_t), size_t, POINTER(POINTER(cef_v8value_t))),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t)),
)
cef_v8value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_v8value_t._callbacks[0]),
    ('is_undefined', cef_v8value_t._callbacks[1]),
    ('is_null', cef_v8value_t._callbacks[2]),
    ('is_bool', cef_v8value_t._callbacks[3]),
    ('is_int', cef_v8value_t._callbacks[4]),
    ('is_uint', cef_v8value_t._callbacks[5]),
    ('is_double', cef_v8value_t._callbacks[6]),
    ('is_date', cef_v8value_t._callbacks[7]),
    ('is_string', cef_v8value_t._callbacks[8]),
    ('is_object', cef_v8value_t._callbacks[9]),
    ('is_array', cef_v8value_t._callbacks[10]),
    ('is_array_buffer', cef_v8value_t._callbacks[11]),
    ('is_function', cef_v8value_t._callbacks[12]),
    ('is_promise', cef_v8value_t._callbacks[13]),
    ('is_same', cef_v8value_t._callbacks[14]),
    ('get_bool_value', cef_v8value_t._callbacks[15]),
    ('get_int_value', cef_v8value_t._callbacks[16]),
    ('get_uint_value', cef_v8value_t._callbacks[17]),
    ('get_double_value', cef_v8value_t._callbacks[18]),
    ('get_date_value', cef_v8value_t._callbacks[19]),
    ('get_string_value', cef_v8value_t._callbacks[20]),
    ('is_user_created', cef_v8value_t._callbacks[21]),
    ('has_exception', cef_v8value_t._callbacks[22]),
    ('get_exception', cef_v8value_t._callbacks[23]),
    ('clear_exception', cef_v8value_t._callbacks[24]),
    ('will_rethrow_exceptions', cef_v8value_t._callbacks[25]),
    ('set_rethrow_exceptions', cef_v8value_t._callbacks[26]),
    ('has_value_bykey', cef_v8value_t._callbacks[27]),
    ('has_value_byindex', cef_v8value_t._callbacks[28]),
    ('delete_value_bykey', cef_v8value_t._callbacks[29]),
    ('delete_value_byindex', cef_v8value_t._callbacks[30]),
    ('get_value_bykey', cef_v8value_t._callbacks[31]),
    ('get_value_byindex', cef_v8value_t._callbacks[32]),
    ('set_value_bykey', cef_v8value_t._callbacks[33]),
    ('set_value_byindex', cef_v8value_t._callbacks[34]),
    ('set_value_byaccessor', cef_v8value_t._callbacks[35]),
    ('get_keys', cef_v8value_t._callbacks[36]),
    ('set_user_data', cef_v8value_t._callbacks[37]),
    ('get_user_data', cef_v8value_t._callbacks[38]),
    ('get_externally_allocated_memory', cef_v8value_t._callbacks[39]),
    ('adjust_externally_allocated_memory', cef_v8value_t._callbacks[40]),
    ('get_array_length', cef_v8value_t._callbacks[41]),
    ('get_array_buffer_release_callback', cef_v8value_t._callbacks[42]),
    ('neuter_array_buffer', cef_v8value_t._callbacks[43]),
    ('get_function_name', cef_v8value_t._callbacks[44]),
    ('get_function_handler', cef_v8value_t._callbacks[45]),
    ('execute_function', cef_v8value_t._callbacks[46]),
    ('execute_function_with_context', cef_v8value_t._callbacks[47]),
    ('resolve_promise', cef_v8value_t._callbacks[48]),
    ('reject_promise', cef_v8value_t._callbacks[49]),
)


cef_v8accessor_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t)),
)
cef_v8accessor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get', cef_v8accessor_t._callbacks[0]),
    ('set', cef_v8accessor_t._callbacks[1]),
)


cef_v8array_buffer_release_callback_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_v8array_buffer_release_callback_t), POINTER(c_void)),
)
cef_v8array_buffer_release_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('release_buffer', cef_v8array_buffer_release_callback_t._callbacks[0]),
)


cef_v8handler_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8handler_t), POINTER(cef_string_t), POINTER(cef_v8value_t), size_t, POINTER(POINTER(cef_v8value_t)), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t)),
)
cef_v8handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('execute', cef_v8handler_t._callbacks[0]),
)


cef_v8interceptor_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t)),
)
cef_v8interceptor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_byname', cef_v8interceptor_t._callbacks[0]),
    ('get_byindex', cef_v8interceptor_t._callbacks[1]),
    ('set_byname', cef_v8interceptor_t._callbacks[2]),
    ('set_byindex', cef_v8interceptor_t._callbacks[3]),
)


cef_v8stack_frame_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8stack_frame_t)),
    CFUNCTYPE(c_int, POINTER(cef_v8stack_frame_t)),
)
cef_v8stack_frame_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('is_valid', cef_v8stack_frame_t._callbacks[0]),
    ('get_script_name', cef_v8stack_frame_t._callbacks[1]),
    ('get_script_name_or_source_url', cef_v8stack_frame_t._callbacks[2]),
    ('get_function_name', cef_v8stack_frame_t._callbacks[3]),
    ('get_line_number', cef_v8stack_frame_t._callbacks[4]),
    ('get_column', cef_v8stack_frame_t._callbacks[5]),
    ('is_eval', cef_v8stack_frame_t._callbacks[6]),
    ('is_constructor', cef_v8stack_frame_t._callbacks[7]),
)


cef_waitable_event_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_waitable_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_waitable_event_t)),
    CFUNCTYPE(c_int, POINTER(cef_waitable_event_t)),
    CFUNCTYPE(c_void, POINTER(cef_waitable_event_t)),
    CFUNCTYPE(c_int, POINTER(cef_waitable_event_t), int64),
)
cef_waitable_event_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('reset', cef_waitable_event_t._callbacks[0]),
    ('signal', cef_waitable_event_t._callbacks[1]),
    ('is_signaled', cef_waitable_event_t._callbacks[2]),
    ('wait', cef_waitable_event_t._callbacks[3]),
    ('timed_wait', cef_waitable_event_t._callbacks[4]),
)


cef_window_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), POINTER(cef_size_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), POINTER(cef_image_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), POINTER(cef_image_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_t), POINTER(cef_view_t), cef_docking_mode_t),
    CFUNCTYPE(c_void, POINTER(cef_window_t), POINTER(cef_menu_model_t), POINTER(cef_point_t), cef_menu_anchor_position_t),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_t)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), size_t, POINTER(cef_draggable_region_t)),
    CFUNCTYPE(cef_window_handle_t, POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int, uint32),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_window_t), cef_mouse_button_type_t, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int, c_int, c_int, c_int, c_int),
    CFUNCTYPE(c_void, POINTER(cef_window_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_window_t)),
)
cef_window_t._fields_ = (
    ('_base', cef_panel_t),
    ('show', cef_window_t._callbacks[0]),
    ('hide', cef_window_t._callbacks[1]),
    ('center_window', cef_window_t._callbacks[2]),
    ('close', cef_window_t._callbacks[3]),
    ('is_closed', cef_window_t._callbacks[4]),
    ('activate', cef_window_t._callbacks[5]),
    ('deactivate', cef_window_t._callbacks[6]),
    ('is_active', cef_window_t._callbacks[7]),
    ('bring_to_top', cef_window_t._callbacks[8]),
    ('set_always_on_top', cef_window_t._callbacks[9]),
    ('is_always_on_top', cef_window_t._callbacks[10]),
    ('maximize', cef_window_t._callbacks[11]),
    ('minimize', cef_window_t._callbacks[12]),
    ('restore', cef_window_t._callbacks[13]),
    ('set_fullscreen', cef_window_t._callbacks[14]),
    ('is_maximized', cef_window_t._callbacks[15]),
    ('is_minimized', cef_window_t._callbacks[16]),
    ('is_fullscreen', cef_window_t._callbacks[17]),
    ('set_title', cef_window_t._callbacks[18]),
    ('get_title', cef_window_t._callbacks[19]),
    ('set_window_icon', cef_window_t._callbacks[20]),
    ('get_window_icon', cef_window_t._callbacks[21]),
    ('set_window_app_icon', cef_window_t._callbacks[22]),
    ('get_window_app_icon', cef_window_t._callbacks[23]),
    ('add_overlay_view', cef_window_t._callbacks[24]),
    ('show_menu', cef_window_t._callbacks[25]),
    ('cancel_menu', cef_window_t._callbacks[26]),
    ('get_display', cef_window_t._callbacks[27]),
    ('get_client_area_bounds_in_screen', cef_window_t._callbacks[28]),
    ('set_draggable_regions', cef_window_t._callbacks[29]),
    ('get_window_handle', cef_window_t._callbacks[30]),
    ('send_key_press', cef_window_t._callbacks[31]),
    ('send_mouse_move', cef_window_t._callbacks[32]),
    ('send_mouse_events', cef_window_t._callbacks[33]),
    ('set_accelerator', cef_window_t._callbacks[34]),
    ('remove_accelerator', cef_window_t._callbacks[35]),
    ('remove_all_accelerators', cef_window_t._callbacks[36]),
)


cef_window_delegate_t._callbacks = (
    CFUNCTYPE(c_void, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_void, POINTER(cef_window_delegate_t), POINTER(cef_window_t), c_int),
    CFUNCTYPE(c_void, POINTER(cef_window_delegate_t), POINTER(cef_window_t), POINTER(cef_rect_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_window_delegate_t), POINTER(cef_window_t), POINTER(c_int), POINTER(c_int)),
    CFUNCTYPE(cef_rect_t, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(cef_show_state_t, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t)),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_window_delegate_t), POINTER(cef_window_t), POINTER(cef_key_event_t)),
)
cef_window_delegate_t._fields_ = (
    ('_base', cef_panel_delegate_t),
    ('on_window_created', cef_window_delegate_t._callbacks[0]),
    ('on_window_closing', cef_window_delegate_t._callbacks[1]),
    ('on_window_destroyed', cef_window_delegate_t._callbacks[2]),
    ('on_window_activation_changed', cef_window_delegate_t._callbacks[3]),
    ('on_window_bounds_changed', cef_window_delegate_t._callbacks[4]),
    ('get_parent_window', cef_window_delegate_t._callbacks[5]),
    ('get_initial_bounds', cef_window_delegate_t._callbacks[6]),
    ('get_initial_show_state', cef_window_delegate_t._callbacks[7]),
    ('is_frameless', cef_window_delegate_t._callbacks[8]),
    ('can_resize', cef_window_delegate_t._callbacks[9]),
    ('can_maximize', cef_window_delegate_t._callbacks[10]),
    ('can_minimize', cef_window_delegate_t._callbacks[11]),
    ('can_close', cef_window_delegate_t._callbacks[12]),
    ('on_accelerator', cef_window_delegate_t._callbacks[13]),
    ('on_key_event', cef_window_delegate_t._callbacks[14]),
)


cef_write_handler_t._callbacks = (
    CFUNCTYPE(size_t, POINTER(cef_write_handler_t), POINTER(c_void), size_t, size_t),
    CFUNCTYPE(c_int, POINTER(cef_write_handler_t), int64, c_int),
    CFUNCTYPE(int64, POINTER(cef_write_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_write_handler_t)),
    CFUNCTYPE(c_int, POINTER(cef_write_handler_t)),
)
cef_write_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('write', cef_write_handler_t._callbacks[0]),
    ('seek', cef_write_handler_t._callbacks[1]),
    ('tell', cef_write_handler_t._callbacks[2]),
    ('flush', cef_write_handler_t._callbacks[3]),
    ('may_block', cef_write_handler_t._callbacks[4]),
)


cef_x509cert_principal_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509cert_principal_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509cert_principal_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509cert_principal_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509cert_principal_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509cert_principal_t)),
    CFUNCTYPE(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t),
    CFUNCTYPE(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t),
)
cef_x509cert_principal_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_display_name', cef_x509cert_principal_t._callbacks[0]),
    ('get_common_name', cef_x509cert_principal_t._callbacks[1]),
    ('get_locality_name', cef_x509cert_principal_t._callbacks[2]),
    ('get_state_or_province_name', cef_x509cert_principal_t._callbacks[3]),
    ('get_country_name', cef_x509cert_principal_t._callbacks[4]),
    ('get_street_addresses', cef_x509cert_principal_t._callbacks[5]),
    ('get_organization_names', cef_x509cert_principal_t._callbacks[6]),
    ('get_organization_unit_names', cef_x509cert_principal_t._callbacks[7]),
    ('get_domain_components', cef_x509cert_principal_t._callbacks[8]),
)


cef_x509certificate_t._callbacks = (
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509certificate_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509certificate_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509certificate_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_x509certificate_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_x509certificate_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509certificate_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_x509certificate_t)),
    CFUNCTYPE(size_t, POINTER(cef_x509certificate_t)),
    CFUNCTYPE(c_void, POINTER(cef_x509certificate_t), POINTER(size_t), POINTER(POINTER(cef_binary_value_t))),
    CFUNCTYPE(c_void, POINTER(cef_x509certificate_t), POINTER(size_t), POINTER(POINTER(cef_binary_value_t))),
)
cef_x509certificate_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('get_subject', cef_x509certificate_t._callbacks[0]),
    ('get_issuer', cef_x509certificate_t._callbacks[1]),
    ('get_serial_number', cef_x509certificate_t._callbacks[2]),
    ('get_valid_start', cef_x509certificate_t._callbacks[3]),
    ('get_valid_expiry', cef_x509certificate_t._callbacks[4]),
    ('get_derencoded', cef_x509certificate_t._callbacks[5]),
    ('get_pemencoded', cef_x509certificate_t._callbacks[6]),
    ('get_issuer_chain_size', cef_x509certificate_t._callbacks[7]),
    ('get_derencoded_issuer_chain', cef_x509certificate_t._callbacks[8]),
    ('get_pemencoded_issuer_chain', cef_x509certificate_t._callbacks[9]),
)


cef_xml_reader_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(cef_xml_node_type_t, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(size_t, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t), c_int),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t), POINTER(cef_string_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_xml_reader_t)),
)
cef_xml_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('move_to_next_node', cef_xml_reader_t._callbacks[0]),
    ('close', cef_xml_reader_t._callbacks[1]),
    ('has_error', cef_xml_reader_t._callbacks[2]),
    ('get_error', cef_xml_reader_t._callbacks[3]),
    ('get_type', cef_xml_reader_t._callbacks[4]),
    ('get_depth', cef_xml_reader_t._callbacks[5]),
    ('get_local_name', cef_xml_reader_t._callbacks[6]),
    ('get_prefix', cef_xml_reader_t._callbacks[7]),
    ('get_qualified_name', cef_xml_reader_t._callbacks[8]),
    ('get_namespace_uri', cef_xml_reader_t._callbacks[9]),
    ('get_base_uri', cef_xml_reader_t._callbacks[10]),
    ('get_xml_lang', cef_xml_reader_t._callbacks[11]),
    ('is_empty_element', cef_xml_reader_t._callbacks[12]),
    ('has_value', cef_xml_reader_t._callbacks[13]),
    ('get_value', cef_xml_reader_t._callbacks[14]),
    ('has_attributes', cef_xml_reader_t._callbacks[15]),
    ('get_attribute_count', cef_xml_reader_t._callbacks[16]),
    ('get_attribute_byindex', cef_xml_reader_t._callbacks[17]),
    ('get_attribute_byqname', cef_xml_reader_t._callbacks[18]),
    ('get_attribute_bylname', cef_xml_reader_t._callbacks[19]),
    ('get_inner_xml', cef_xml_reader_t._callbacks[20]),
    ('get_outer_xml', cef_xml_reader_t._callbacks[21]),
    ('get_line_number', cef_xml_reader_t._callbacks[22]),
    ('move_to_attribute_byindex', cef_xml_reader_t._callbacks[23]),
    ('move_to_attribute_byqname', cef_xml_reader_t._callbacks[24]),
    ('move_to_attribute_bylname', cef_xml_reader_t._callbacks[25]),
    ('move_to_first_attribute', cef_xml_reader_t._callbacks[26]),
    ('move_to_next_attribute', cef_xml_reader_t._callbacks[27]),
    ('move_to_carrying_element', cef_xml_reader_t._callbacks[28]),
)


cef_zip_reader_t._callbacks = (
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t), POINTER(cef_string_t), c_int),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(POINTER(c_void), POINTER(cef_zip_reader_t)),
    CFUNCTYPE(int64, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(cef_basetime_t, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t), POINTER(cef_string_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t), POINTER(c_void), size_t),
    CFUNCTYPE(int64, POINTER(cef_zip_reader_t)),
    CFUNCTYPE(c_int, POINTER(cef_zip_reader_t)),
)
cef_zip_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('move_to_first_file', cef_zip_reader_t._callbacks[0]),
    ('move_to_next_file', cef_zip_reader_t._callbacks[1]),
    ('move_to_file', cef_zip_reader_t._callbacks[2]),
    ('close', cef_zip_reader_t._callbacks[3]),
    ('get_file_name', cef_zip_reader_t._callbacks[4]),
    ('get_file_size', cef_zip_reader_t._callbacks[5]),
    ('get_file_last_modified', cef_zip_reader_t._callbacks[6]),
    ('open_file', cef_zip_reader_t._callbacks[7]),
    ('close_file', cef_zip_reader_t._callbacks[8]),
    ('read_file', cef_zip_reader_t._callbacks[9]),
    ('tell', cef_zip_reader_t._callbacks[10]),
    ('eof', cef_zip_reader_t._callbacks[11]),
)
